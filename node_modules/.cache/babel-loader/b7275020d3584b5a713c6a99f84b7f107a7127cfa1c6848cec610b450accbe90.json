{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2729931\\\\Desktop\\\\PULL\\\\hustlr\\\\src\\\\pages\\\\AdminContracts.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ref, get } from 'firebase/database';\nimport { db, applications_db } from '../firebaseConfig';\nimport HeaderAdmin from \"../components/HeaderAdmin\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminReports = () => {\n  _s();\n  const [clients, setClients] = useState([]);\n  const [setFreelancers] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const usersRef = ref(applications_db, 'Information');\n        const usersSnapshot = await get(usersRef);\n        const clientsArray = [];\n        const freelancersArray = [];\n        const clientJobsMap = {};\n        const freelancerJobsMap = {};\n        if (usersSnapshot.exists()) {\n          const usersData = usersSnapshot.val();\n          Object.entries(usersData).forEach(([userUID, user]) => {\n            const userData = {\n              id: userUID,\n              bio: user.bio,\n              professtion: user.profession,\n              skills: user.skills,\n              totalJobs: user.totalJobs\n            };\n            if (user.role === 'Client') {\n              clientsArray.push(userData);\n            } else if (user.role === 'Freelancer') {\n              freelancersArray.push(userData);\n            }\n          });\n        }\n        const jobsRef = ref(db, 'jobs');\n        const jobsSnapshot = await get(jobsRef);\n        const allJobs = jobsSnapshot.exists() ? jobsSnapshot.val() : {};\n        const appsRef = ref(applications_db, 'accepted_applications');\n        const appsSnapshot = await get(appsRef);\n        const applicationsData = appsSnapshot.exists() ? appsSnapshot.val() : {};\n        clientsArray.forEach(client => {\n          const clientJobs = Object.entries(allJobs).filter(([_, job]) => job.clientUID === client.id);\n          const previousJobs = [];\n          const activeJobs = [];\n          clientJobs.forEach(([jobId, job]) => {\n            var _acceptedApp;\n            const jobApplications = applicationsData[jobId];\n            let acceptedApp = null;\n            if (jobApplications) {\n              acceptedApp = Object.values(jobApplications).find(app => app.status === 'accepted');\n            }\n            const freelancerName = ((_acceptedApp = acceptedApp) === null || _acceptedApp === void 0 ? void 0 : _acceptedApp.name) || 'Unknown Freelancer';\n            if (acceptedApp && acceptedApp.job_milestones) {\n              const milestones = Object.values(acceptedApp.job_milestones);\n              const allDone = milestones.every(m => m.status === 'Done');\n              const jobWithFreelancer = {\n                ...job,\n                milestones,\n                freelancerName\n              };\n              if (allDone) {\n                previousJobs.push(jobWithFreelancer);\n              } else {\n                activeJobs.push(jobWithFreelancer);\n              }\n            } else {\n              activeJobs.push({\n                ...job,\n                milestones: [],\n                freelancerName\n              });\n            }\n          });\n          clientJobsMap[client.id] = {\n            previousJobs,\n            activeJobs\n          };\n        });\n        Object.entries(applicationsData).forEach(([jobId, jobApplications]) => {\n          Object.entries(jobApplications).forEach(([freelancerUID, application]) => {\n            if (application.status === 'accepted') {\n              const milestones = Object.values(application.job_milestones || {});\n              const isCompleted = milestones.every(m => m.status === 'Done');\n              const category = isCompleted ? 'completed' : 'active';\n              if (!freelancerJobsMap[freelancerUID]) {\n                freelancerJobsMap[freelancerUID] = {\n                  completed: [],\n                  active: []\n                };\n              }\n              freelancerJobsMap[freelancerUID][category].push({\n                jobId,\n                milestones,\n                ...allJobs[jobId]\n              });\n            }\n          });\n        });\n        const enrichedFreelancers = freelancersArray.map(freelancer => {\n          const jobs = freelancerJobsMap[freelancer.id] || {\n            completed: [],\n            active: []\n          };\n          return {\n            ...freelancer,\n            completedJobs: jobs.completed,\n            activeJobs: jobs.active\n          };\n        });\n        const enrichedClients = clientsArray.map(client => {\n          const jobs = clientJobsMap[client.id] || {\n            previousJobs: [],\n            activeJobs: []\n          };\n          return {\n            ...client,\n            previousJobs: jobs.previousJobs,\n            activeJobs: jobs.activeJobs\n          };\n        });\n        setClients(enrichedClients);\n        setFreelancers(enrichedFreelancers);\n      } catch (error) {\n        console.log(\"Error fetching data\");\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderAdmin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Admin Contracts Management\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/Admin\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"admin-jobs-container\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"admin-user-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"admin-job-list\",\n          children: clients.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-jobs-message\",\n            children: \"No clients found.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 9\n          }, this) : clients.map((client, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n            className: \"admin-job-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Client \", index]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Bio:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 16\n              }, this), \" \", client.bio || 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Jobs with experience:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 16\n              }, this), \" \", client.totalJobs || 0]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"job-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Active Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), client.activeJobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No active jobs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 22\n              }, this) : client.activeJobs.map((job, i) => {\n                var _job$milestones;\n                return /*#__PURE__*/_jsxDEV(\"section\", {\n                  className: \"job-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Title:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 24\n                    }, this), \" \", job.title || 'Untitled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Description:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 24\n                    }, this), \" \", job.description || 'N/A']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Freelancer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 25\n                    }, this), \" \", job.freelancerName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 22\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Milestones:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: (_job$milestones = job.milestones) === null || _job$milestones === void 0 ? void 0 : _job$milestones.map((m, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [m.title || `Milestone ${j + 1}`, \": \", m.description]\n                    }, j, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 17\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 18\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 17\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: \"job-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Previous Jobs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 25\n              }, this), client.previousJobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No completed jobs.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this) : client.previousJobs.map((job, i) => {\n                var _job$milestones2;\n                return /*#__PURE__*/_jsxDEV(\"section\", {\n                  className: \"job-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Title:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 24\n                    }, this), \" \", job.title || 'Untitled']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Description:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 24\n                    }, this), \" \", job.description || 'N/A']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Freelancer:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 24\n                    }, this), \" \", job.freelancerName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Milestones:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 24\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: (_job$milestones2 = job.milestones) === null || _job$milestones2 === void 0 ? void 0 : _job$milestones2.map((m, j) => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: [m.title || `Milestone ${j + 1}`, \": \", m.description]\n                    }, j, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 21\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 21\n            }, this)]\n          }, client.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AdminReports, \"ncOqN/BBFyPe2zb2oIuJHQoZAo4=\");\n_c = AdminReports;\nexport default AdminReports;\nvar _c;\n$RefreshReg$(_c, \"AdminReports\");","map":{"version":3,"names":["useEffect","useState","ref","get","db","applications_db","HeaderAdmin","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminReports","_s","clients","setClients","setFreelancers","fetchData","usersRef","usersSnapshot","clientsArray","freelancersArray","clientJobsMap","freelancerJobsMap","exists","usersData","val","Object","entries","forEach","userUID","user","userData","id","bio","professtion","profession","skills","totalJobs","role","push","jobsRef","jobsSnapshot","allJobs","appsRef","appsSnapshot","applicationsData","client","clientJobs","filter","_","job","clientUID","previousJobs","activeJobs","jobId","_acceptedApp","jobApplications","acceptedApp","values","find","app","status","freelancerName","name","job_milestones","milestones","allDone","every","m","jobWithFreelancer","freelancerUID","application","isCompleted","category","completed","active","enrichedFreelancers","map","freelancer","jobs","completedJobs","enrichedClients","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","length","index","i","_job$milestones","title","description","j","_job$milestones2","_c","$RefreshReg$"],"sources":["C:/Users/2729931/Desktop/PULL/hustlr/src/pages/AdminContracts.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { ref, get } from 'firebase/database';\r\nimport { db,applications_db } from '../firebaseConfig';\r\nimport HeaderAdmin from \"../components/HeaderAdmin\";\r\n\r\nconst AdminReports = () => {\r\n const [clients, setClients] = useState([]);         \r\n  const [ setFreelancers] = useState([]); \r\n\r\nuseEffect(() => \r\n    \r\n    {\r\n  const fetchData = async () => \r\n    {\r\n    try \r\n    {\r\n      const usersRef = ref(applications_db, 'Information');\r\n\r\n      const usersSnapshot = await get(usersRef);\r\n\r\n      const clientsArray = [];\r\n      const freelancersArray = [];\r\n      const clientJobsMap = {};\r\n      const freelancerJobsMap = {};\r\n\r\n      if (usersSnapshot.exists()) \r\n        \r\n        {\r\n        const usersData = usersSnapshot.val();\r\n\r\n        Object.entries(usersData).forEach(([userUID, user]) =>\r\n            \r\n            {\r\n          const userData = {\r\n            id: userUID,\r\n            bio: user.bio,\r\n            professtion: user.profession,\r\n            skills: user.skills,\r\n            totalJobs: user.totalJobs,\r\n          };\r\n\r\n          if (user.role === 'Client') \r\n            {\r\n            clientsArray.push(userData);\r\n\r\n          } \r\n          else if (user.role === 'Freelancer') \r\n            {\r\n\r\n\r\n                    freelancersArray.push(userData);\r\n          }\r\n        });\r\n      }\r\n\r\n      const jobsRef = ref(db, 'jobs');\r\n      const jobsSnapshot = await get(jobsRef);\r\n      const allJobs = jobsSnapshot.exists() ? jobsSnapshot.val() : {};\r\n\r\n      const appsRef = ref(applications_db, 'accepted_applications');\r\n      const appsSnapshot = await get(appsRef);\r\n      const applicationsData = appsSnapshot.exists() ? appsSnapshot.val() : {};\r\n\r\n      \r\n      clientsArray.forEach((client) => {\r\n        const clientJobs = Object.entries(allJobs).filter(\r\n          ([_, job]) => job.clientUID === client.id\r\n        );\r\n\r\n        const previousJobs = [];\r\n\r\n        const activeJobs = [];\r\n        clientJobs.forEach(([jobId, job]) => \r\n            {\r\n          const jobApplications = applicationsData[jobId];\r\n\r\n          let acceptedApp = null;\r\n          if (jobApplications) \r\n            {\r\n            acceptedApp = Object.values(jobApplications).find(\r\n              (app) => app.status === 'accepted'\r\n            );\r\n          }\r\n\r\n          const freelancerName = acceptedApp?.name || 'Unknown Freelancer';\r\n          if (acceptedApp && acceptedApp.job_milestones) \r\n            {\r\n            const milestones = Object.values(acceptedApp.job_milestones);\r\n            const allDone = milestones.every((m) => m.status === 'Done');\r\n\r\n            const jobWithFreelancer = {\r\n              ...job,\r\n              milestones,\r\n              freelancerName,\r\n            };\r\n\r\n            if (allDone) \r\n            {\r\n              previousJobs.push(jobWithFreelancer);\r\n            } \r\n            else \r\n            {\r\n              activeJobs.push(jobWithFreelancer);\r\n            }\r\n          } \r\n          else \r\n          {\r\n            activeJobs.push({\r\n              ...job,\r\n              milestones: [],\r\n              freelancerName,\r\n            }); \r\n          }\r\n        });\r\n\r\n        clientJobsMap[client.id] = { previousJobs, activeJobs };\r\n      });\r\n\r\n      Object.entries(applicationsData).forEach(([jobId, jobApplications]) => {\r\n        Object.entries(jobApplications).forEach(([freelancerUID, application]) => {\r\n          if (application.status === 'accepted') {\r\n            const milestones = Object.values(application.job_milestones || {});\r\n            const isCompleted = milestones.every((m) => m.status === 'Done');\r\n            const category = isCompleted ? 'completed' : 'active';\r\n\r\n            if (!freelancerJobsMap[freelancerUID]) {\r\n              freelancerJobsMap[freelancerUID] = { completed: [], active: [] };\r\n            }\r\n\r\n            freelancerJobsMap[freelancerUID][category].push({\r\n              jobId,\r\n              milestones,\r\n              ...allJobs[jobId],\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      const enrichedFreelancers = freelancersArray.map((freelancer) => {\r\n        const jobs = freelancerJobsMap[freelancer.id] || { completed: [], active: [] };\r\n        return {\r\n          ...freelancer,\r\n          completedJobs: jobs.completed,\r\n          activeJobs: jobs.active,\r\n        };\r\n      });\r\n\r\n      const enrichedClients = clientsArray.map((client) => {\r\n        const jobs = clientJobsMap[client.id] || { previousJobs: [], activeJobs: [] };\r\n        return {\r\n          ...client,\r\n          previousJobs: jobs.previousJobs,\r\n          activeJobs: jobs.activeJobs,\r\n        };\r\n      });\r\n\r\n      setClients(enrichedClients);\r\n      setFreelancers(enrichedFreelancers);\r\n    } catch (error) {\r\n      console.log(\"Error fetching data\");\r\n    }\r\n  };\r\n\r\n  fetchData();\r\n}, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <HeaderAdmin />\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Admin Contracts Management</h1>\r\n        </section>\r\n\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/Admin\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <main className=\"admin-jobs-container\">\r\n\r\n  {}\r\n  <section className=\"admin-user-section\">\r\n    <h2>Clients</h2>\r\n    <section className=\"admin-job-list\">\r\n      {clients.length === 0 ? (\r\n        <p className=\"no-jobs-message\">No clients found.</p>\r\n      ) : (\r\n        clients.map((client, index) => (\r\n          <section className=\"admin-job-card\" key={client.id}>\r\n            <h3>Client {index}</h3>\r\n            <p><strong>Bio:</strong> {client.bio || 'N/A'}</p>\r\n            <p><strong>Jobs with experience:</strong> {client.totalJobs || 0}</p>\r\n\r\n            \r\n            {}\r\n                    <section className=\"job-section\">\r\n                    <h4>Active Jobs</h4>\r\n                    {client.activeJobs.length === 0 ? (\r\n                     <p>No active jobs.</p>\r\n                    ) : (\r\n                    client.activeJobs.map((job, i) => (\r\n                <section key={i} className=\"job-card\">\r\n                    <p><strong>Title:</strong> {job.title || 'Untitled'}</p>\r\n                    <p><strong>Description:</strong> {job.description || 'N/A'}</p>\r\n                     <p><strong>Freelancer:</strong> {job.freelancerName}</p>\r\n                    <p><strong>Milestones:</strong></p>\r\n                 <ul>\r\n                {job.milestones?.map((m, j) => (\r\n                <li key={j}>{m.title || `Milestone ${j + 1}`}: {m.description}</li>\r\n                ))}\r\n                </ul>\r\n      </section>\r\n    ))\r\n  )}\r\n</section>\r\n\r\n                    {}\r\n                    <section className=\"job-section\">\r\n                        <h4>Previous Jobs</h4>\r\n                    {client.previousJobs.length === 0 ? (\r\n                    <p>No completed jobs.</p>\r\n                    ) : (\r\n                    client.previousJobs.map((job, i) => (\r\n                    <section key={i} className=\"job-card\">\r\n                    <p><strong>Title:</strong> {job.title || 'Untitled'}</p>\r\n                    <p><strong>Description:</strong> {job.description || 'N/A'}</p>\r\n                    <p><strong>Freelancer:</strong> {job.freelancerName}</p>\r\n                    <p><strong>Milestones:</strong></p>\r\n                    <ul>\r\n                    {job.milestones?.map((m, j) => (\r\n                    <li key={j}>{m.title || `Milestone ${j + 1}`}: {m.description}</li>\r\n                    ))}\r\n                </ul>\r\n                </section>\r\n                ))\r\n         )}\r\n        </section>\r\n\r\n          </section>\r\n        ))\r\n      )}\r\n    </section>\r\n  </section>\r\n\r\n  \r\n\r\n</main>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminReports;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
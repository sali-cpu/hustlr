{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2729931\\\\Desktop\\\\PULL\\\\hustlr\\\\src\\\\pages\\\\FreelancerPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/FreelancerPayments.css';\nimport { ref, get, update } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport HeaderClient from '../components/HeaderClient';\nimport FooterClient from '../components/FooterClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FreelancerPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  // Filter states\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"freelancerWallet\");\n    if (savedWallet) setWallet(parseFloat(savedWallet));\n    const fetchAcceptedJobs = async () => {\n      const userUID = localStorage.getItem(\"userUID\");\n      const acceptedRef = ref(applications_db, 'accepted_applications');\n      try {\n        const snapshot = await get(acceptedRef);\n        const jobList = [];\n        if (snapshot.exists()) {\n          snapshot.forEach(parentSnap => {\n            parentSnap.forEach(jobSnap => {\n              const data = jobSnap.val();\n              if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\n                data.job_milestones.forEach((milestone, index) => {\n                  const id = jobSnap.key + \"ms\" + index;\n                  jobList.push({\n                    id,\n                    jobTitle: data.jobTitle,\n                    milestone: milestone.description,\n                    amount: milestone.amount,\n                    status: milestone.status || 'Pending',\n                    dueDate: milestone.duedate || 'N/A',\n                    parentKey: parentSnap.key,\n                    jobKey: jobSnap.key,\n                    milestoneIndex: index\n                  });\n                });\n              }\n            });\n          });\n          setPayments(jobList);\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchAcceptedJobs();\n  }, []);\n  const handleMarkDone = async payment => {\n    try {\n      const jobRef = ref(applications_db, `accepted_applications/${payment.parentKey}/${payment.jobKey}/job_milestones/${payment.milestoneIndex}`);\n      await update(jobRef, {\n        status: \"Done\"\n      });\n\n      // Update UI state\n      setPayments(prev => prev.map(p => p.id === payment.id ? {\n        ...p,\n        status: \"Done\"\n      } : p));\n    } catch (err) {\n      console.error(\"Failed to update milestone status:\", err);\n      alert(\"Failed to mark milestone as done.\");\n    }\n  };\n  const handleMarkInProgress = async payment => {\n    try {\n      const jobRef = ref(applications_db, `accepted_applications/${payment.parentKey}/${payment.jobKey}/job_milestones/${payment.milestoneIndex}`);\n      await update(jobRef, {\n        status: \"In-Progress\"\n      });\n\n      // Update UI state\n      setPayments(prev => prev.map(p => p.id === payment.id ? {\n        ...p,\n        status: \"In-Progress\"\n      } : p));\n    } catch (err) {\n      console.error(\"Failed to update milestone status:\", err);\n      alert(\"Failed to mark milestone as in-progress.\");\n    }\n  };\n\n  // Toggle payment status\n  const togglePaymentStatus = id => {\n    setPayments(payments.map(payment => payment.id === id ? {\n      ...payment,\n      status: payment.status === 'Pending' ? 'Paid' : 'Pending'\n    } : payment));\n  };\n\n  // Filter payments based on filters\n  const filteredPayments = payments.filter(payment => {\n    const matchesSearch = payment.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) || payment.client.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'All' || payment.status === statusFilter;\n    const matchesDateRange = (!startDate || payment.dueDate >= startDate) && (!endDate || payment.dueDate <= endDate);\n    return matchesSearch && matchesStatus && matchesDateRange;\n  });\n\n  // Export to CSV function\n  const exportToCSV = () => {\n    const headers = ['Job Title', 'Milestone', 'Amount', 'Status', 'Due Date'];\n    const csvRows = [];\n\n    // Add headers\n    csvRows.push(headers.join(','));\n\n    // Add data rows\n    filteredPayments.forEach(payment => {\n      const values = [`\"${payment.jobTitle}\"`, `\"${payment.milestone}\"`, payment.amount, payment.status, payment.dueDate];\n      csvRows.push(values.join(','));\n    });\n\n    // Create and download CSV file\n    const csvContent = csvRows.join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `Freelancer_payments_${new Date().toISOString().slice(0, 10)}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"client-payments-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"client-jobs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"header-title-area\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-title\",\n            children: \"Jobs for Freelancer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"nav_section\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"main-nav\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/Freelancer\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"payments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payments for Freelancers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"wallet-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Freelancer Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: $\", wallet.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by freelancer or job title\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: statusFilter,\n            onChange: e => setStatusFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Overdue\",\n              children: \"Overdue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToCSV,\n            children: \"Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"payments-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Milestone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredPayments.map(payment => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: payment.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: payment.milestone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", payment.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status ${payment.status.toLowerCase()}`,\n                  children: payment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: payment.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"pending\", \"In-Progress\"].includes(payment.status) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [payment.status !== \"In-Progress\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"mark-in-progress-btn\",\n                    onClick: () => handleMarkInProgress(payment),\n                    children: \"Mark as In-Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"mark-done-btn\",\n                    onClick: () => handleMarkDone(payment),\n                    children: \"Mark as Done\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: payment.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)]\n            }, payment.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FreelancerPayments, \"7L/9nGuJxlYvZeSgfQjMhv6kgNs=\");\n_c = FreelancerPayments;\nexport default FreelancerPayments;\nvar _c;\n$RefreshReg$(_c, \"FreelancerPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","applications_db","HeaderClient","FooterClient","jsxDEV","_jsxDEV","Fragment","_Fragment","FreelancerPayments","_s","payments","setPayments","wallet","setWallet","searchTerm","setSearchTerm","statusFilter","setStatusFilter","startDate","setStartDate","endDate","setEndDate","savedWallet","localStorage","getItem","parseFloat","fetchAcceptedJobs","userUID","acceptedRef","snapshot","jobList","exists","forEach","parentSnap","jobSnap","data","val","applicant_userUID","Array","isArray","job_milestones","milestone","index","id","key","push","jobTitle","description","amount","status","dueDate","duedate","parentKey","jobKey","milestoneIndex","error","console","handleMarkDone","payment","jobRef","prev","map","p","err","alert","handleMarkInProgress","togglePaymentStatus","filteredPayments","filter","matchesSearch","toLowerCase","includes","client","matchesStatus","matchesDateRange","exportToCSV","headers","csvRows","join","values","csvContent","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","Date","toISOString","slice","style","visibility","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","toFixed","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/2729931/Desktop/PULL/hustlr/src/pages/FreelancerPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/FreelancerPayments.css';\r\nimport { ref, get, update } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\nimport HeaderClient from '../components/HeaderClient';\r\nimport FooterClient from '../components/FooterClient';\r\n\r\nconst FreelancerPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  // Filter states\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('All');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"freelancerWallet\");\r\n    if (savedWallet) setWallet(parseFloat(savedWallet));\r\n\r\n    const fetchAcceptedJobs = async () => {\r\n      const userUID = localStorage.getItem(\"userUID\");\r\n      const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n      try {\r\n        const snapshot = await get(acceptedRef);\r\n        const jobList = [];\r\n\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(parentSnap => {\r\n            parentSnap.forEach(jobSnap => {\r\n              const data = jobSnap.val();\r\n              if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\r\n                data.job_milestones.forEach((milestone, index) => {\r\n                  const id = jobSnap.key + \"ms\" + index;\r\n                  jobList.push({\r\n                    id,\r\n                    jobTitle: data.jobTitle,\r\n                    milestone: milestone.description,\r\n                    amount: milestone.amount,\r\n                    status: milestone.status || 'Pending',\r\n                    dueDate: milestone.duedate || 'N/A',\r\n                    parentKey: parentSnap.key,\r\n                    jobKey: jobSnap.key,\r\n                    milestoneIndex: index\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          });\r\n          setPayments(jobList);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAcceptedJobs();\r\n  }, []);\r\n\r\n  const handleMarkDone = async (payment) => {\r\n    try {\r\n      const jobRef = ref(applications_db, `accepted_applications/${payment.parentKey}/${payment.jobKey}/job_milestones/${payment.milestoneIndex}`);\r\n      await update(jobRef, { status: \"Done\" });\r\n\r\n      // Update UI state\r\n      setPayments(prev =>\r\n        prev.map(p => p.id === payment.id ? { ...p, status: \"Done\" } : p)\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Failed to update milestone status:\", err);\r\n      alert(\"Failed to mark milestone as done.\");\r\n    }\r\n  };\r\n\r\n  const handleMarkInProgress = async (payment) => {\r\n    try {\r\n      const jobRef = ref(applications_db, `accepted_applications/${payment.parentKey}/${payment.jobKey}/job_milestones/${payment.milestoneIndex}`);\r\n      await update(jobRef, { status: \"In-Progress\" });\r\n\r\n      // Update UI state\r\n      setPayments(prev =>\r\n        prev.map(p => p.id === payment.id ? { ...p, status: \"In-Progress\" } : p)\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Failed to update milestone status:\", err);\r\n      alert(\"Failed to mark milestone as in-progress.\");\r\n    }\r\n  };\r\n\r\n  // Toggle payment status\r\n  const togglePaymentStatus = (id) => {\r\n    setPayments(payments.map(payment => \r\n      payment.id === id \r\n        ? { ...payment, status: payment.status === 'Pending' ? 'Paid' : 'Pending' } \r\n        : payment\r\n    ));\r\n  };\r\n\r\n  // Filter payments based on filters\r\n  const filteredPayments = payments.filter(payment => {\r\n    const matchesSearch = payment.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                         payment.client.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'All' || payment.status === statusFilter;\r\n    const matchesDateRange = (\r\n      (!startDate || payment.dueDate >= startDate) && \r\n      (!endDate || payment.dueDate <= endDate)\r\n    );\r\n    return matchesSearch && matchesStatus && matchesDateRange;\r\n  });\r\n\r\n  // Export to CSV function\r\n  const exportToCSV = () => {\r\n    const headers = ['Job Title', 'Milestone', 'Amount', 'Status', 'Due Date'];\r\n    const csvRows = [];\r\n    \r\n    // Add headers\r\n    csvRows.push(headers.join(','));\r\n    \r\n    // Add data rows\r\n    filteredPayments.forEach(payment => {\r\n      const values = [\r\n        `\"${payment.jobTitle}\"`,\r\n        `\"${payment.milestone}\"`,\r\n        payment.amount,\r\n        payment.status,\r\n        payment.dueDate,\r\n      ];\r\n      csvRows.push(values.join(','));\r\n    });\r\n\r\n    // Create and download CSV file\r\n    const csvContent = csvRows.join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `Freelancer_payments_${new Date().toISOString().slice(0,10)}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderClient/>\r\n      <main className=\"client-payments-main\">\r\n        <header className=\"client-jobs-header\">\r\n          <section className=\"header-title-area\">\r\n            <h1 className=\"main-title\">Jobs for Freelancer</h1>\r\n          </section>\r\n          <section className=\"nav_section\">\r\n            <nav className=\"main-nav\">\r\n              <ul>\r\n                <li><a href=\"/Freelancer\">Home</a></li>\r\n              </ul>\r\n            </nav>\r\n          </section>\r\n        </header>\r\n\r\n        <section className=\"payments-section\">\r\n          <h2>Payments for Freelancers</h2>\r\n\r\n          <section className=\"wallet-section\">\r\n            <h3>Freelancer Wallet</h3>\r\n            <p>Balance: ${wallet.toFixed(2)}</p>\r\n          </section>\r\n\r\n          <section className=\"filters\">\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Search by freelancer or job title\" \r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <select value={statusFilter} onChange={(e) => setStatusFilter(e.target.value)}>\r\n              <option value=\"All\">All</option>\r\n              <option value=\"Paid\">Paid</option>\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Overdue\">Overdue</option>\r\n            </select>\r\n            <input \r\n              type=\"date\" \r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n            />\r\n            <input \r\n              type=\"date\" \r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n            />\r\n            <button onClick={exportToCSV}>Export CSV</button>\r\n          </section>\r\n\r\n          <table className=\"payments-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job Title</th>\r\n                <th>Milestone</th>\r\n                <th>Amount</th>\r\n                <th>Status</th>\r\n                <th>Due Date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredPayments.map(payment => (\r\n                <tr key={payment.id}>\r\n                  <td>{payment.jobTitle}</td>\r\n                  <td>{payment.milestone}</td>\r\n                  <td>${payment.amount}</td>\r\n                  <td><span className={`status ${payment.status.toLowerCase()}`}>{payment.status}</span></td>\r\n                  <td>{payment.dueDate}</td>\r\n                  <td>\r\n                    {[\"pending\", \"In-Progress\"].includes(payment.status) ? (\r\n                      <>\r\n                        {payment.status !== \"In-Progress\" && (\r\n                          <button\r\n                            className=\"mark-in-progress-btn\"\r\n                            onClick={() => handleMarkInProgress(payment)}\r\n                          >\r\n                            Mark as In-Progress\r\n                          </button>\r\n                        )}\r\n                        <button\r\n                          className=\"mark-done-btn\"\r\n                          onClick={() => handleMarkDone(payment)}\r\n                        >\r\n                          Mark as Done\r\n                        </button>\r\n                      </>\r\n                    ) : (\r\n                      <span>{payment.status}</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      </main>\r\n      <FooterClient/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FreelancerPayments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
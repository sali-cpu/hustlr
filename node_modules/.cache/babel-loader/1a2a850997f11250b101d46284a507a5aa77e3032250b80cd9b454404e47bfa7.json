{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mogor\\\\Desktop\\\\project\\\\hustlr\\\\src\\\\pages\\\\ClientJobs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../stylesheets/ClientJobs.css';\nimport HeaderClient from \"../components/HeaderClient\";\nimport FooterClient from \"../components/FooterClient\";\nimport { db, applications_db } from '../firebaseConfig';\nimport { get, ref, push, set, update, remove, onValue } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialFormData = {\n  title: '',\n  description: '',\n  category: '',\n  budget: '',\n  deadline: '',\n  milestones: [{\n    description: '',\n    amount: '',\n    Status: ''\n  }, {\n    description: '',\n    amount: '',\n    Status: ''\n  }, {\n    description: '',\n    amount: '',\n    Status: ''\n  }] //newly added \n};\nconst userUID = localStorage.getItem(\"userUID\");\n//alert(\"User UID at load: \" + userUID);\n\nconst ClientJobs = () => {\n  _s();\n  const [jobs, setJobsList] = useState([]);\n  const [formData, setFormData] = useState(initialFormData);\n  const [error, setError] = useState('');\n  const [editingJobId, setEditingJobId] = useState(null);\n  const formSectionRef = useRef(null);\n  const [viewingApplicantsJobId, setViewingApplicantsJobId] = useState(null);\n  const [applicants, setApplicants] = useState([]);\n  const [selectedJobTitle, setSelectedJobTitle] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  //newly added \n  const handleMilestoneChange = (index, field, value) => {\n    const updatedMilestones = [...formData.milestones];\n    updatedMilestones[index][field] = value;\n    setFormData({\n      ...formData,\n      milestones: updatedMilestones\n    });\n  };\n  const handleEditClick = jobToEdit => {\n    var _jobToEdit$milestones, _formSectionRef$curre;\n    setEditingJobId(jobToEdit.id);\n    setFormData({\n      title: jobToEdit.title,\n      description: jobToEdit.description,\n      category: jobToEdit.category,\n      budget: jobToEdit.budget,\n      deadline: jobToEdit.deadline,\n      milestones: (_jobToEdit$milestones = jobToEdit.milestones) !== null && _jobToEdit$milestones !== void 0 ? _jobToEdit$milestones : [{\n        description: '',\n        amount: ''\n      }, {\n        description: '',\n        amount: ''\n      }, {\n        description: '',\n        amount: ''\n      }]\n    });\n    (_formSectionRef$curre = formSectionRef.current) === null || _formSectionRef$curre === void 0 ? void 0 : _formSectionRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleViewApplicants = async (jobId, jobTitle) => {\n    setViewingApplicantsJobId(jobId);\n    setSelectedJobTitle(jobTitle);\n    const applicantsRef = ref(applications_db, `applications/${jobId}`);\n    try {\n      var _formSectionRef$curre2;\n      const snapshot = await get(applicantsRef);\n      if (snapshot.exists()) {\n        const data = snapshot.val();\n        const loadedApplicants = Object.entries(data).filter(([_, appData]) => {\n          var _appData$status;\n          const status = (_appData$status = appData.status) === null || _appData$status === void 0 ? void 0 : _appData$status.toLowerCase();\n          return status === 'pending' || status === 'accepted';\n        }).map(([key, appData]) => ({\n          id: key,\n          user_UID: appData.applicant_userUID || '',\n          name: appData.name || '',\n          surname: appData.surname || '',\n          motivation: appData.motivation || '',\n          skills: appData.skills || '',\n          status: appData.status || '',\n          email: localStorage.getItem(\"userEmail\")\n          // milestones: appData.milestones || [],\n        }));\n        setApplicants(loadedApplicants);\n      } else {\n        setApplicants([]);\n      }\n      (_formSectionRef$curre2 = formSectionRef.current) === null || _formSectionRef$curre2 === void 0 ? void 0 : _formSectionRef$curre2.scrollIntoView({\n        behavior: 'smooth'\n      });\n    } catch (error) {\n      console.error(\"❌ Error fetching applicants:\", error);\n      alert(\"Failed to load applicants.\");\n    }\n  };\n  const handleAcceptApplicant = async applicantId => {\n    try {\n      const jobId = viewingApplicantsJobId;\n      const applicantRef = ref(applications_db, `applications/${jobId}/${applicantId}`);\n      const acceptedRef = ref(applications_db, `accepted_applications/${jobId}/${applicantId}`);\n      const jobApplicationsRef = ref(applications_db, `applications/${jobId}`);\n\n      // Fetch the accepted applicant's data\n      const applicantSnapshot = await get(applicantRef);\n      if (!applicantSnapshot.exists()) {\n        alert(\"❌ Applicant not found.\");\n        return;\n      }\n      const applicantData = applicantSnapshot.val();\n\n      // Ensure milestones are included when copying\n      const acceptedData = {\n        ...applicantData,\n        status: \"accepted\",\n        milestones: applicantData.milestones || {} // fallback to empty object if not present\n      };\n\n      // Update accepted applicant status in original location\n      await update(applicantRef, {\n        status: \"accepted\"\n      });\n\n      // Store the accepted applicant in accepted_applications\n      await set(acceptedRef, acceptedData);\n\n      // Reject all other applicants\n      const snapshot = await get(jobApplicationsRef);\n      if (snapshot.exists()) {\n        const allApplicants = snapshot.val();\n        for (const id in allApplicants) {\n          if (id !== applicantId) {\n            const otherRef = ref(applications_db, `applications/${jobId}/${id}`);\n            await update(otherRef, {\n              status: \"rejected\"\n            });\n          }\n        }\n      }\n      alert(`✅ Accepted applicant with ID: ${applicantId}`);\n      handleViewApplicants(jobId, selectedJobTitle); // Refresh UI\n    } catch (error) {\n      console.error(\"❌ Error accepting applicant:\", error);\n      alert(\"Failed to accept applicant.\");\n    }\n  };\n  const handleRejectApplicant = async applicantId => {\n    const jobId = viewingApplicantsJobId;\n    const applicationRef = ref(applications_db, `applications/${jobId}/${applicantId}`);\n    const rejectedRef = ref(applications_db, `rejected_applications/${jobId}/${applicantId}`);\n    try {\n      // Get the current application data\n      const snapshot = await get(applicationRef);\n      if (!snapshot.exists()) {\n        alert(\"❌ Applicant not found.\");\n        return;\n      }\n      const applicantData = snapshot.val();\n\n      // Update status in main applications DB\n      await update(applicationRef, {\n        status: \"rejected\"\n      });\n\n      // Save a copy to rejected_applications\n      const rejectedData = {\n        ...applicantData,\n        status: \"rejected\",\n        rejectionTime: new Date().toISOString()\n      };\n      await set(rejectedRef, rejectedData);\n      alert(\"❌ Application rejected successfully.\");\n      handleViewApplicants(jobId, selectedJobTitle); // Refresh UI\n    } catch (error) {\n      alert(\"Failed to reject application: \" + error.message);\n    }\n  };\n  const handleDelete = async jobIdToDelete => {\n    if (!window.confirm('Are you sure you want to delete this job?')) return;\n    const jobRef = ref(db, `jobs/${jobIdToDelete}`);\n    await remove(jobRef);\n    //alert(\"Job deleted from Firebase\");\n  };\n  const handleCancelEdit = () => {\n    setEditingJobId(null);\n    setFormData(initialFormData);\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    //alert(\"User UID during submit: \" + userUID);\n\n    if (!formData.title || !formData.description || !formData.category || !formData.budget || !formData.deadline) {\n      setError('⚠️ Please fill in all fields.');\n      return;\n    }\n    for (const milestone of formData.milestones) {\n      if (!milestone.description || !milestone.amount) {\n        setError('⚠️ Please fill in all milestone fields.');\n        return;\n      }\n    }\n    setError('');\n    try {\n      if (editingJobId) {\n        const jobRef = ref(db, `jobs/${editingJobId}`);\n        await update(jobRef, {\n          ...formData,\n          budget: parseFloat(formData.budget)\n        });\n        //alert(\"✅ Job updated in Firebase\");\n      } else {\n        const newJobRef = push(ref(db, \"jobs\"));\n        await set(newJobRef, {\n          ...formData,\n          budget: parseFloat(formData.budget),\n          clientUID: localStorage.getItem(\"userUID\")\n        });\n        //alert(\"✅ Job added to Firebase\");\n      }\n      setFormData(initialFormData);\n      setEditingJobId(null);\n    } catch (error) {\n      console.error(\"🔥 Failed to add/update job:\", error);\n      setError(\"⚠️ Error: \" + error.message);\n      alert(\"❌ Failed to add job: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    const jobsRef = ref(db, 'jobs');\n    const unsubscribe = onValue(jobsRef, snapshot => {\n      const data = snapshot.val();\n      const loadedJobs = [];\n      for (const id in data) {\n        if (data[id].clientUID === userUID) {\n          loadedJobs.push({\n            id,\n            ...data[id]\n          });\n        }\n      }\n      setJobsList(loadedJobs);\n    });\n    return () => unsubscribe();\n  }, [userUID]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Jobs for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/client\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"client-jobs-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"posted-jobs-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Posted Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"jobs-list\",\n          children: jobs.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"no-jobs-message\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"You haven't posted any jobs yet.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this) : jobs.map(job => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"job-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"header\", {\n                className: \"job-card-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: job.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Category:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 26\n                  }, this), \" \", job.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Budget:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 24\n                }, this), \" $\", job.budget ? job.budget.toLocaleString() : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Deadline:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 24\n                }, this), \" \", job.deadline ? new Date(job.deadline + 'T00:00:00').toLocaleDateString() : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"job-description\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Description:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 52\n                }, this), \" \", job.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this), job.milestones && job.milestones.length > 0 && /*#__PURE__*/_jsxDEV(\"section\", {\n                className: \"milestones\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Milestones:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: job.milestones.map((milestone, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Description:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 21\n                    }, this), \" \", milestone.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 318,\n                      columnNumber: 75\n                    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Amount:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 319,\n                      columnNumber: 21\n                    }, this), \" $\", parseFloat(milestone.amount).toLocaleString()]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                className: \"job-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleViewApplicants(job.id, job.title),\n                  className: \"job-btn view-btn\",\n                  children: \"View\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEditClick(job),\n                  className: \"job-btn edit-btn\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDelete(job.id),\n                  className: \"job-btn delete-btn\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 19\n            }, this)\n          }, job.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"create-job-section\",\n        ref: formSectionRef,\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: viewingApplicantsJobId ? `Applicants for \"${selectedJobTitle}\"` : editingJobId ? 'Edit Your Job' : 'Post a New Job'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 3\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-msg\",\n          role: \"alert\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this), viewingApplicantsJobId ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [applicants.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No applicants yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 9\n          }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"applicants-list\",\n            children: applicants.map(applicant => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"applicant-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Full Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 17\n                }, this), \" \", applicant.name, \" \", applicant.surname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Skill:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 17\n                }, this), \" \", applicant.skills]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Motivation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 17\n                }, this), \" \", applicant.motivation]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 14\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 17\n                }, this), \" \", applicant.email]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 14\n              }, this), applicant.status.toLowerCase() === \"accepted\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"accepted-message\",\n                style: {\n                  backgroundColor: '#d4edda',\n                  padding: '10px',\n                  borderRadius: '8px',\n                  marginTop: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u2705 You have accepted this applicant for the job.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Please contact them at: \", /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: `mailto:${applicant.email}`,\n                    children: applicant.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 44\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 15\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"pending-message\",\n                style: {\n                  marginTop: '10px'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"\\u23F3 This application is still pending.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleAcceptApplicant(applicant.id),\n                  className: \"accept-btn\",\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleRejectApplicant(applicant.id),\n                  className: \"reject-btn\",\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 15\n              }, this)]\n            }, applicant.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewingApplicantsJobId(null),\n            className: \"cancel-btn\",\n            children: \"Back to Job Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n              children: editingJobId ? 'Update Job Details' : 'Job Details'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"title\",\n              type: \"text\",\n              name: \"title\",\n              value: formData.title,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"description\",\n              name: \"description\",\n              value: formData.description,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              name: \"category\",\n              value: formData.category,\n              onChange: handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                disabled: true,\n                children: \"Select a category...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Web Development\",\n                children: \"Web Development\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Design\",\n                children: \"Design\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Writing\",\n                children: \"Writing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Marketing\",\n                children: \"Marketing\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Admin Support\",\n                children: \"Admin Support\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"budget\",\n              children: \"Budget (USD)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"budget\",\n              type: \"number\",\n              name: \"budget\",\n              value: formData.budget,\n              onChange: handleChange,\n              required: true,\n              min: \"0\",\n              step: \"any\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"deadline\",\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"deadline\",\n              type: \"date\",\n              name: \"deadline\",\n              value: formData.deadline,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: formData.milestones.map((milestone, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"milestone-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Milestone \", index + 1, \" Description:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: `milestone_description_${index}`,\n                  value: milestone.description,\n                  onChange: e => handleMilestoneChange(index, 'description', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: `milestone_amount_${index}`,\n                  value: milestone.amount,\n                  onChange: e => handleMilestoneChange(index, 'amount', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 5\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 3\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: editingJobId ? 'Save Changes' : 'Create Job'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 9\n            }, this), editingJobId && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCancelEdit,\n              className: \"cancel-btn\",\n              children: \"Cancel Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClientJobs, \"wgIOvUphGXZMt98+8hRcXeoURqA=\");\n_c = ClientJobs;\nexport default ClientJobs;\nvar _c;\n$RefreshReg$(_c, \"ClientJobs\");","map":{"version":3,"names":["React","useState","useEffect","useRef","HeaderClient","FooterClient","db","applications_db","get","ref","push","set","update","remove","onValue","jsxDEV","_jsxDEV","Fragment","_Fragment","initialFormData","title","description","category","budget","deadline","milestones","amount","Status","userUID","localStorage","getItem","ClientJobs","_s","jobs","setJobsList","formData","setFormData","error","setError","editingJobId","setEditingJobId","formSectionRef","viewingApplicantsJobId","setViewingApplicantsJobId","applicants","setApplicants","selectedJobTitle","setSelectedJobTitle","handleChange","e","target","name","value","handleMilestoneChange","index","field","updatedMilestones","handleEditClick","jobToEdit","_jobToEdit$milestones","_formSectionRef$curre","id","current","scrollIntoView","behavior","handleViewApplicants","jobId","jobTitle","applicantsRef","_formSectionRef$curre2","snapshot","exists","data","val","loadedApplicants","Object","entries","filter","_","appData","_appData$status","status","toLowerCase","map","key","user_UID","applicant_userUID","surname","motivation","skills","email","console","alert","handleAcceptApplicant","applicantId","applicantRef","acceptedRef","jobApplicationsRef","applicantSnapshot","applicantData","acceptedData","allApplicants","otherRef","handleRejectApplicant","applicationRef","rejectedRef","rejectedData","rejectionTime","Date","toISOString","message","handleDelete","jobIdToDelete","window","confirm","jobRef","handleCancelEdit","handleSubmit","preventDefault","milestone","parseFloat","newJobRef","clientUID","jobsRef","unsubscribe","loadedJobs","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","length","job","toLocaleString","toLocaleDateString","onClick","role","applicant","style","backgroundColor","padding","borderRadius","marginTop","onSubmit","htmlFor","type","onChange","required","disabled","min","step","_c","$RefreshReg$"],"sources":["C:/Users/mogor/Desktop/project/hustlr/src/pages/ClientJobs.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../stylesheets/ClientJobs.css';\r\nimport HeaderClient from \"../components/HeaderClient\";\r\nimport FooterClient from \"../components/FooterClient\";\r\n\r\nimport { db, applications_db } from '../firebaseConfig';\r\nimport { get, ref, push, set, update, remove, onValue } from \"firebase/database\";\r\n\r\nconst initialFormData = {\r\n  title: '',\r\n  description: '',\r\n  category: '',\r\n  budget: '',\r\n  deadline: '',\r\n  milestones: [\r\n    { description: '', amount: '',Status :''},\r\n    { description: '', amount: '',Status :''},\r\n    { description: '', amount: '',Status :''}\r\n  ] //newly added \r\n};\r\n\r\nconst userUID = localStorage.getItem(\"userUID\");\r\n//alert(\"User UID at load: \" + userUID);\r\n\r\nconst ClientJobs = () => {\r\n  const [jobs, setJobsList] = useState([]);\r\n  const [formData, setFormData] = useState(initialFormData);\r\n  const [error, setError] = useState('');\r\n  const [editingJobId, setEditingJobId] = useState(null);\r\n  const formSectionRef = useRef(null);\r\n  const [viewingApplicantsJobId, setViewingApplicantsJobId] = useState(null);\r\n  const [applicants, setApplicants] = useState([]);\r\n  const [selectedJobTitle, setSelectedJobTitle] = useState('');\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n  //newly added \r\n  const handleMilestoneChange = (index, field, value) => {\r\n    const updatedMilestones = [...formData.milestones];\r\n    updatedMilestones[index][field] = value;\r\n    setFormData({ ...formData, milestones: updatedMilestones });\r\n  };\r\n  \r\n  const handleEditClick = (jobToEdit) => {\r\n    setEditingJobId(jobToEdit.id);\r\n    setFormData({\r\n      title: jobToEdit.title,\r\n      description: jobToEdit.description,\r\n      category: jobToEdit.category,\r\n      budget: jobToEdit.budget,\r\n      deadline: jobToEdit.deadline,\r\n      milestones: jobToEdit.milestones ?? [\r\n        { description: '', amount: '' },\r\n        { description: '', amount: '' },\r\n        { description: '', amount: '' }\r\n      ]\r\n    });\r\n    formSectionRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n  const handleViewApplicants = async (jobId, jobTitle) => {\r\n    setViewingApplicantsJobId(jobId);\r\n    setSelectedJobTitle(jobTitle);\r\n  \r\n    const applicantsRef = ref(applications_db, `applications/${jobId}`);\r\n  \r\n    try {\r\n      const snapshot = await get(applicantsRef);\r\n  \r\n      if (snapshot.exists()) {\r\n        const data = snapshot.val();\r\n        const loadedApplicants = Object.entries(data)\r\n          .filter(([_, appData]) => {\r\n            const status = appData.status?.toLowerCase();\r\n            return status === 'pending' || status === 'accepted';\r\n          })\r\n          .map(([key, appData]) => ({\r\n            id: key,\r\n            user_UID: appData.applicant_userUID || '',\r\n            name: appData.name || '',\r\n            surname: appData.surname || '',\r\n            motivation: appData.motivation || '',\r\n            skills: appData.skills || '',\r\n            status: appData.status || '',\r\n            email: localStorage.getItem(\"userEmail\"), \r\n           // milestones: appData.milestones || [],\r\n          }));\r\n  \r\n        setApplicants(loadedApplicants);\r\n      } else {\r\n        setApplicants([]);\r\n      }\r\n  \r\n      formSectionRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  \r\n    } catch (error) {\r\n      console.error(\"❌ Error fetching applicants:\", error);\r\n      alert(\"Failed to load applicants.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n  const handleAcceptApplicant = async (applicantId) => {\r\n    try {\r\n      const jobId = viewingApplicantsJobId;\r\n      const applicantRef = ref(applications_db, `applications/${jobId}/${applicantId}`);\r\n      const acceptedRef = ref(applications_db, `accepted_applications/${jobId}/${applicantId}`);\r\n      const jobApplicationsRef = ref(applications_db, `applications/${jobId}`);\r\n  \r\n      // Fetch the accepted applicant's data\r\n      const applicantSnapshot = await get(applicantRef);\r\n      if (!applicantSnapshot.exists()) {\r\n        alert(\"❌ Applicant not found.\");\r\n        return;\r\n      }\r\n      const applicantData = applicantSnapshot.val();\r\n  \r\n      // Ensure milestones are included when copying\r\n      const acceptedData = {\r\n        ...applicantData,\r\n        status: \"accepted\",\r\n        milestones: applicantData.milestones || {}  // fallback to empty object if not present\r\n      };\r\n  \r\n      // Update accepted applicant status in original location\r\n      await update(applicantRef, { status: \"accepted\" });\r\n  \r\n      // Store the accepted applicant in accepted_applications\r\n      await set(acceptedRef, acceptedData);\r\n  \r\n      // Reject all other applicants\r\n      const snapshot = await get(jobApplicationsRef);\r\n      if (snapshot.exists()) {\r\n        const allApplicants = snapshot.val();\r\n        for (const id in allApplicants) {\r\n          if (id !== applicantId) {\r\n            const otherRef = ref(applications_db, `applications/${jobId}/${id}`);\r\n            await update(otherRef, {\r\n              status: \"rejected\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n  \r\n      alert(`✅ Accepted applicant with ID: ${applicantId}`);\r\n      handleViewApplicants(jobId, selectedJobTitle); // Refresh UI\r\n  \r\n    } catch (error) {\r\n      console.error(\"❌ Error accepting applicant:\", error);\r\n      alert(\"Failed to accept applicant.\");\r\n    }\r\n  };\r\n  \r\n\r\n  \r\n  const handleRejectApplicant = async (applicantId) => \r\n    {\r\n      const jobId = viewingApplicantsJobId;\r\n\r\n  const applicationRef = ref(applications_db, `applications/${jobId}/${applicantId}`);\r\n  const rejectedRef = ref(applications_db, `rejected_applications/${jobId}/${applicantId}`);\r\n\r\n  try {\r\n    // Get the current application data\r\n    const snapshot = await get(applicationRef);\r\n    if (!snapshot.exists()) {\r\n      alert(\"❌ Applicant not found.\");\r\n      return;\r\n    }\r\n\r\n    const applicantData = snapshot.val();\r\n\r\n    // Update status in main applications DB\r\n    await update(applicationRef, { status: \"rejected\" });\r\n\r\n    // Save a copy to rejected_applications\r\n    const rejectedData = {\r\n      ...applicantData,\r\n      status: \"rejected\",\r\n      rejectionTime: new Date().toISOString()\r\n    };\r\n\r\n    await set(rejectedRef, rejectedData);\r\n\r\n    alert(\"❌ Application rejected successfully.\");\r\n    handleViewApplicants(jobId, selectedJobTitle); // Refresh UI\r\n\r\n  } catch (error) {\r\n    alert(\"Failed to reject application: \" + error.message);\r\n  }\r\n  };\r\n  \r\n\r\n  const handleDelete = async (jobIdToDelete) => {\r\n    if (!window.confirm('Are you sure you want to delete this job?')) return;\r\n    const jobRef = ref(db, `jobs/${jobIdToDelete}`);\r\n    await remove(jobRef);\r\n    //alert(\"Job deleted from Firebase\");\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingJobId(null);\r\n    setFormData(initialFormData);\r\n    setError('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    //alert(\"User UID during submit: \" + userUID);\r\n\r\n    if (!formData.title || !formData.description || !formData.category || !formData.budget || !formData.deadline) {\r\n      setError('⚠️ Please fill in all fields.');\r\n      return;\r\n    }\r\n\r\n    for (const milestone of formData.milestones) {\r\n      if (!milestone.description || !milestone.amount) {\r\n        setError('⚠️ Please fill in all milestone fields.');\r\n        return;\r\n      }\r\n    }\r\n    \r\n\r\n    setError('');\r\n\r\n    try {\r\n      if (editingJobId) {\r\n        const jobRef = ref(db, `jobs/${editingJobId}`);\r\n        await update(jobRef, {\r\n          ...formData,\r\n          budget: parseFloat(formData.budget),\r\n        });\r\n        //alert(\"✅ Job updated in Firebase\");\r\n      } else {\r\n        const newJobRef = push(ref(db, \"jobs\"));\r\n        await set(newJobRef, {\r\n          ...formData,\r\n          budget: parseFloat(formData.budget),\r\n          clientUID: localStorage.getItem(\"userUID\"),\r\n        });\r\n        //alert(\"✅ Job added to Firebase\");\r\n      }\r\n\r\n      setFormData(initialFormData);\r\n      setEditingJobId(null);\r\n\r\n    } catch (error) {\r\n      console.error(\"🔥 Failed to add/update job:\", error);\r\n      setError(\"⚠️ Error: \" + error.message);\r\n      alert(\"❌ Failed to add job: \" + error.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const jobsRef = ref(db, 'jobs');\r\n    const unsubscribe = onValue(jobsRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      const loadedJobs = [];\r\n\r\n      for (const id in data) {\r\n        if (data[id].clientUID === userUID) {\r\n          loadedJobs.push({ id, ...data[id] });\r\n        }\r\n      }\r\n      setJobsList(loadedJobs);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [userUID]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderClient />\r\n\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Jobs for Clients</h1>\r\n        </section>\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/client\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <main className=\"client-jobs-container\">\r\n\r\n        <section className=\"posted-jobs-section\">\r\n          <h2>Your Posted Jobs</h2>\r\n          <ul className=\"jobs-list\">\r\n            {jobs.length === 0 ? (\r\n              <li className=\"no-jobs-message\"><p>You haven't posted any jobs yet.</p></li>\r\n            ) : (\r\n              jobs.map(job => (\r\n                <li key={job.id}>\r\n                  <article className=\"job-card\">\r\n                    <header className=\"job-card-header\">\r\n                      <h3>{job.title}</h3>\r\n                      <p><strong>Category:</strong> {job.category}</p>\r\n                    </header>\r\n                    <p><strong>Budget:</strong> ${job.budget ? job.budget.toLocaleString() : 'N/A'}</p>\r\n                    <p><strong>Deadline:</strong> {job.deadline ? new Date(job.deadline + 'T00:00:00').toLocaleDateString() : 'N/A'}</p>\r\n                    <p className=\"job-description\"><strong>Description:</strong> {job.description}</p>\r\n                    \r\n                    {/* Display Milestones */}\r\n                    {job.milestones && job.milestones.length > 0 && (\r\n                  <section className=\"milestones\">\r\n                  <h4>Milestones:</h4>\r\n                  <ul>\r\n      \r\n\r\n                  {job.milestones.map((milestone, index) => (\r\n                    <li key={index}>\r\n                    <strong>Description:</strong> {milestone.description} <br />\r\n                    <strong>Amount:</strong> ${parseFloat(milestone.amount).toLocaleString()}\r\n                  </li>\r\n                    ))}\r\n                 </ul>\r\n                 </section>\r\n                )}\r\n\r\n\r\n                    <footer className=\"job-actions\">\r\n                      <button onClick={() => handleViewApplicants(job.id, job.title)} className=\"job-btn view-btn\">View</button>\r\n                      <button onClick={() => handleEditClick(job)} className=\"job-btn edit-btn\">Edit</button>\r\n                      <button onClick={() => handleDelete(job.id)} className=\"job-btn delete-btn\">Delete</button>\r\n                    </footer>\r\n                  </article>\r\n                </li>\r\n              ))\r\n            )}\r\n          </ul>\r\n        </section>\r\n\r\n        <section className=\"create-job-section\" ref={formSectionRef}>\r\n  <header>\r\n    <h1>\r\n      {viewingApplicantsJobId \r\n        ? `Applicants for \"${selectedJobTitle}\"`\r\n        : (editingJobId ? 'Edit Your Job' : 'Post a New Job')\r\n      }\r\n    </h1>\r\n  </header>\r\n\r\n  {error && <p className=\"error-msg\" role=\"alert\">{error}</p>}\r\n\r\n  {viewingApplicantsJobId ? (\r\n    <>\r\n    \r\n    {applicants.length === 0 ? (\r\n        <p>No applicants yet.</p>\r\n      ) : (\r\n        <ul className=\"applicants-list\">\r\n          {applicants.map(applicant => (\r\n            <li key={applicant.id} className=\"applicant-card\">\r\n             <p><strong>Full Name:</strong> {applicant.name} {applicant.surname}</p>\r\n             <p><strong>Skill:</strong> {applicant.skills}</p>\r\n             <p><strong>Motivation:</strong> {applicant.motivation}</p>\r\n             <p><strong>Email:</strong> {applicant.email}</p>\r\n\r\n            {applicant.status.toLowerCase() === \"accepted\" ? (\r\n              <div className=\"accepted-message\" style={{ backgroundColor: '#d4edda', padding: '10px', borderRadius: '8px', marginTop: '10px' }}>\r\n                <strong>✅ You have accepted this applicant for the job.</strong>\r\n                <p>Please contact them at: <a href={`mailto:${applicant.email}`}>{applicant.email}</a></p>\r\n              </div>\r\n            ) : (\r\n              <div className=\"pending-message\" style={{ marginTop: '10px' }}>\r\n              <em>⏳ This application is still pending.</em>\r\n              <button onClick={() => handleAcceptApplicant(applicant.id)} className=\"accept-btn\">Accept</button>\r\n              <button onClick={() => handleRejectApplicant(applicant.id)} className=\"reject-btn\">Reject</button>\r\n              </div>\r\n            )}\r\n             \r\n             \r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <button onClick={() => setViewingApplicantsJobId(null)} className=\"cancel-btn\">Back to Job Form</button>\r\n    </>\r\n  ) : (\r\n    <form onSubmit={handleSubmit}>\r\n      <fieldset>\r\n        <legend>{editingJobId ? 'Update Job Details' : 'Job Details'}</legend>\r\n\r\n        <label htmlFor=\"title\">Job Title</label>\r\n        <input id=\"title\" type=\"text\" name=\"title\" value={formData.title} onChange={handleChange} required />\r\n\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea id=\"description\" name=\"description\" value={formData.description} onChange={handleChange} required />\r\n\r\n        <label htmlFor=\"category\">Category</label>\r\n        <select id=\"category\" name=\"category\" value={formData.category} onChange={handleChange} required>\r\n          <option value=\"\" disabled>Select a category...</option>\r\n          <option value=\"Web Development\">Web Development</option>\r\n          <option value=\"Design\">Design</option>\r\n          <option value=\"Writing\">Writing</option>\r\n          <option value=\"Marketing\">Marketing</option>\r\n          <option value=\"Admin Support\">Admin Support</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n\r\n        <label htmlFor=\"budget\">Budget (USD)</label>\r\n        <input id=\"budget\" type=\"number\" name=\"budget\" value={formData.budget} onChange={handleChange} required min=\"0\" step=\"any\" />\r\n\r\n        <label htmlFor=\"deadline\">Deadline</label>\r\n        <input id=\"deadline\" type=\"date\" name=\"deadline\" value={formData.deadline} onChange={handleChange} required />\r\n      </fieldset>\r\n      <fieldset>\r\n  \r\n\r\n  {formData.milestones.map((milestone, index) => (\r\n  <div key={index} className=\"milestone-group\">\r\n    <label>\r\n      Milestone {index + 1} Description:\r\n      <input\r\n        type=\"text\"\r\n        name={`milestone_description_${index}`}\r\n        value={milestone.description}\r\n        onChange={(e) => handleMilestoneChange(index, 'description', e.target.value)}\r\n        required\r\n      />\r\n    </label>\r\n    <label>\r\n      Amount:\r\n      <input\r\n        type=\"number\"\r\n        name={`milestone_amount_${index}`}\r\n        value={milestone.amount}\r\n        onChange={(e) => handleMilestoneChange(index, 'amount', e.target.value)}\r\n        required\r\n      />\r\n    </label>\r\n  </div>\r\n))}\r\n</fieldset>\r\n\r\n\r\n      <footer>\r\n        <button type=\"submit\">{editingJobId ? 'Save Changes' : 'Create Job'}</button>\r\n        {editingJobId && (\r\n          <button type=\"button\" onClick={handleCancelEdit} className=\"cancel-btn\">Cancel Edit</button>\r\n        )}\r\n      </footer>\r\n    </form>\r\n  )}\r\n</section>\r\n\r\n      </main>\r\n\r\n      <FooterClient />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientJobs;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,+BAA+B;AACtC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,YAAY,MAAM,4BAA4B;AAErD,SAASC,EAAE,EAAEC,eAAe,QAAQ,mBAAmB;AACvD,SAASC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjF,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE,EAAE;EACfC,QAAQ,EAAE,EAAE;EACZC,MAAM,EAAE,EAAE;EACVC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,CACV;IAAEJ,WAAW,EAAE,EAAE;IAAEK,MAAM,EAAE,EAAE;IAACC,MAAM,EAAE;EAAE,CAAC,EACzC;IAAEN,WAAW,EAAE,EAAE;IAAEK,MAAM,EAAE,EAAE;IAACC,MAAM,EAAE;EAAE,CAAC,EACzC;IAAEN,WAAW,EAAE,EAAE;IAAEK,MAAM,EAAE,EAAE;IAACC,MAAM,EAAE;EAAE,CAAC,CAC1C,CAAC;AACJ,CAAC;AAED,MAAMC,OAAO,GAAGC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;AAC/C;;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAACkB,eAAe,CAAC;EACzD,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMwC,cAAc,GAAGtC,MAAM,CAAC,IAAI,CAAC;EACnC,MAAM,CAACuC,sBAAsB,EAAEC,yBAAyB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC1E,MAAM,CAAC2C,UAAU,EAAEC,aAAa,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC6C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAG5D,MAAM+C,YAAY,GAAIC,CAAC,IAAK;IAC1Bb,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACc,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EACD;EACA,MAAMC,qBAAqB,GAAGA,CAACC,KAAK,EAAEC,KAAK,EAAEH,KAAK,KAAK;IACrD,MAAMI,iBAAiB,GAAG,CAAC,GAAGrB,QAAQ,CAACV,UAAU,CAAC;IAClD+B,iBAAiB,CAACF,KAAK,CAAC,CAACC,KAAK,CAAC,GAAGH,KAAK;IACvChB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAEV,UAAU,EAAE+B;IAAkB,CAAC,CAAC;EAC7D,CAAC;EAED,MAAMC,eAAe,GAAIC,SAAS,IAAK;IAAA,IAAAC,qBAAA,EAAAC,qBAAA;IACrCpB,eAAe,CAACkB,SAAS,CAACG,EAAE,CAAC;IAC7BzB,WAAW,CAAC;MACVhB,KAAK,EAAEsC,SAAS,CAACtC,KAAK;MACtBC,WAAW,EAAEqC,SAAS,CAACrC,WAAW;MAClCC,QAAQ,EAAEoC,SAAS,CAACpC,QAAQ;MAC5BC,MAAM,EAAEmC,SAAS,CAACnC,MAAM;MACxBC,QAAQ,EAAEkC,SAAS,CAAClC,QAAQ;MAC5BC,UAAU,GAAAkC,qBAAA,GAAED,SAAS,CAACjC,UAAU,cAAAkC,qBAAA,cAAAA,qBAAA,GAAI,CAClC;QAAEtC,WAAW,EAAE,EAAE;QAAEK,MAAM,EAAE;MAAG,CAAC,EAC/B;QAAEL,WAAW,EAAE,EAAE;QAAEK,MAAM,EAAE;MAAG,CAAC,EAC/B;QAAEL,WAAW,EAAE,EAAE;QAAEK,MAAM,EAAE;MAAG,CAAC;IAEnC,CAAC,CAAC;IACF,CAAAkC,qBAAA,GAAAnB,cAAc,CAACqB,OAAO,cAAAF,qBAAA,uBAAtBA,qBAAA,CAAwBG,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EACD,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACtDxB,yBAAyB,CAACuB,KAAK,CAAC;IAChCnB,mBAAmB,CAACoB,QAAQ,CAAC;IAE7B,MAAMC,aAAa,GAAG3D,GAAG,CAACF,eAAe,EAAE,gBAAgB2D,KAAK,EAAE,CAAC;IAEnE,IAAI;MAAA,IAAAG,sBAAA;MACF,MAAMC,QAAQ,GAAG,MAAM9D,GAAG,CAAC4D,aAAa,CAAC;MAEzC,IAAIE,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMC,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAC3B,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,OAAO,CAACJ,IAAI,CAAC,CAC1CK,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,OAAO,CAAC,KAAK;UAAA,IAAAC,eAAA;UACxB,MAAMC,MAAM,IAAAD,eAAA,GAAGD,OAAO,CAACE,MAAM,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,WAAW,CAAC,CAAC;UAC5C,OAAOD,MAAM,KAAK,SAAS,IAAIA,MAAM,KAAK,UAAU;QACtD,CAAC,CAAC,CACDE,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEL,OAAO,CAAC,MAAM;UACxBlB,EAAE,EAAEuB,GAAG;UACPC,QAAQ,EAAEN,OAAO,CAACO,iBAAiB,IAAI,EAAE;UACzCnC,IAAI,EAAE4B,OAAO,CAAC5B,IAAI,IAAI,EAAE;UACxBoC,OAAO,EAAER,OAAO,CAACQ,OAAO,IAAI,EAAE;UAC9BC,UAAU,EAAET,OAAO,CAACS,UAAU,IAAI,EAAE;UACpCC,MAAM,EAAEV,OAAO,CAACU,MAAM,IAAI,EAAE;UAC5BR,MAAM,EAAEF,OAAO,CAACE,MAAM,IAAI,EAAE;UAC5BS,KAAK,EAAE7D,YAAY,CAACC,OAAO,CAAC,WAAW;UACxC;QACD,CAAC,CAAC,CAAC;QAELe,aAAa,CAAC6B,gBAAgB,CAAC;MACjC,CAAC,MAAM;QACL7B,aAAa,CAAC,EAAE,CAAC;MACnB;MAEA,CAAAwB,sBAAA,GAAA5B,cAAc,CAACqB,OAAO,cAAAO,sBAAA,uBAAtBA,sBAAA,CAAwBN,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAEhE,CAAC,CAAC,OAAO3B,KAAK,EAAE;MACdsD,OAAO,CAACtD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDuD,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAID,MAAMC,qBAAqB,GAAG,MAAOC,WAAW,IAAK;IACnD,IAAI;MACF,MAAM5B,KAAK,GAAGxB,sBAAsB;MACpC,MAAMqD,YAAY,GAAGtF,GAAG,CAACF,eAAe,EAAE,gBAAgB2D,KAAK,IAAI4B,WAAW,EAAE,CAAC;MACjF,MAAME,WAAW,GAAGvF,GAAG,CAACF,eAAe,EAAE,yBAAyB2D,KAAK,IAAI4B,WAAW,EAAE,CAAC;MACzF,MAAMG,kBAAkB,GAAGxF,GAAG,CAACF,eAAe,EAAE,gBAAgB2D,KAAK,EAAE,CAAC;;MAExE;MACA,MAAMgC,iBAAiB,GAAG,MAAM1F,GAAG,CAACuF,YAAY,CAAC;MACjD,IAAI,CAACG,iBAAiB,CAAC3B,MAAM,CAAC,CAAC,EAAE;QAC/BqB,KAAK,CAAC,wBAAwB,CAAC;QAC/B;MACF;MACA,MAAMO,aAAa,GAAGD,iBAAiB,CAACzB,GAAG,CAAC,CAAC;;MAE7C;MACA,MAAM2B,YAAY,GAAG;QACnB,GAAGD,aAAa;QAChBlB,MAAM,EAAE,UAAU;QAClBxD,UAAU,EAAE0E,aAAa,CAAC1E,UAAU,IAAI,CAAC,CAAC,CAAE;MAC9C,CAAC;;MAED;MACA,MAAMb,MAAM,CAACmF,YAAY,EAAE;QAAEd,MAAM,EAAE;MAAW,CAAC,CAAC;;MAElD;MACA,MAAMtE,GAAG,CAACqF,WAAW,EAAEI,YAAY,CAAC;;MAEpC;MACA,MAAM9B,QAAQ,GAAG,MAAM9D,GAAG,CAACyF,kBAAkB,CAAC;MAC9C,IAAI3B,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAM8B,aAAa,GAAG/B,QAAQ,CAACG,GAAG,CAAC,CAAC;QACpC,KAAK,MAAMZ,EAAE,IAAIwC,aAAa,EAAE;UAC9B,IAAIxC,EAAE,KAAKiC,WAAW,EAAE;YACtB,MAAMQ,QAAQ,GAAG7F,GAAG,CAACF,eAAe,EAAE,gBAAgB2D,KAAK,IAAIL,EAAE,EAAE,CAAC;YACpE,MAAMjD,MAAM,CAAC0F,QAAQ,EAAE;cACrBrB,MAAM,EAAE;YACV,CAAC,CAAC;UACJ;QACF;MACF;MAEAW,KAAK,CAAC,iCAAiCE,WAAW,EAAE,CAAC;MACrD7B,oBAAoB,CAACC,KAAK,EAAEpB,gBAAgB,CAAC,CAAC,CAAC;IAEjD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdsD,OAAO,CAACtD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDuD,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAID,MAAMW,qBAAqB,GAAG,MAAOT,WAAW,IAC9C;IACE,MAAM5B,KAAK,GAAGxB,sBAAsB;IAExC,MAAM8D,cAAc,GAAG/F,GAAG,CAACF,eAAe,EAAE,gBAAgB2D,KAAK,IAAI4B,WAAW,EAAE,CAAC;IACnF,MAAMW,WAAW,GAAGhG,GAAG,CAACF,eAAe,EAAE,yBAAyB2D,KAAK,IAAI4B,WAAW,EAAE,CAAC;IAEzF,IAAI;MACF;MACA,MAAMxB,QAAQ,GAAG,MAAM9D,GAAG,CAACgG,cAAc,CAAC;MAC1C,IAAI,CAAClC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACtBqB,KAAK,CAAC,wBAAwB,CAAC;QAC/B;MACF;MAEA,MAAMO,aAAa,GAAG7B,QAAQ,CAACG,GAAG,CAAC,CAAC;;MAEpC;MACA,MAAM7D,MAAM,CAAC4F,cAAc,EAAE;QAAEvB,MAAM,EAAE;MAAW,CAAC,CAAC;;MAEpD;MACA,MAAMyB,YAAY,GAAG;QACnB,GAAGP,aAAa;QAChBlB,MAAM,EAAE,UAAU;QAClB0B,aAAa,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACxC,CAAC;MAED,MAAMlG,GAAG,CAAC8F,WAAW,EAAEC,YAAY,CAAC;MAEpCd,KAAK,CAAC,sCAAsC,CAAC;MAC7C3B,oBAAoB,CAACC,KAAK,EAAEpB,gBAAgB,CAAC,CAAC,CAAC;IAEjD,CAAC,CAAC,OAAOT,KAAK,EAAE;MACduD,KAAK,CAAC,gCAAgC,GAAGvD,KAAK,CAACyE,OAAO,CAAC;IACzD;EACA,CAAC;EAGD,MAAMC,YAAY,GAAG,MAAOC,aAAa,IAAK;IAC5C,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,2CAA2C,CAAC,EAAE;IAClE,MAAMC,MAAM,GAAG1G,GAAG,CAACH,EAAE,EAAE,QAAQ0G,aAAa,EAAE,CAAC;IAC/C,MAAMnG,MAAM,CAACsG,MAAM,CAAC;IACpB;EACF,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B5E,eAAe,CAAC,IAAI,CAAC;IACrBJ,WAAW,CAACjB,eAAe,CAAC;IAC5BmB,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAM+E,YAAY,GAAG,MAAOpE,CAAC,IAAK;IAChCA,CAAC,CAACqE,cAAc,CAAC,CAAC;IAClB;;IAEA,IAAI,CAACnF,QAAQ,CAACf,KAAK,IAAI,CAACe,QAAQ,CAACd,WAAW,IAAI,CAACc,QAAQ,CAACb,QAAQ,IAAI,CAACa,QAAQ,CAACZ,MAAM,IAAI,CAACY,QAAQ,CAACX,QAAQ,EAAE;MAC5Gc,QAAQ,CAAC,+BAA+B,CAAC;MACzC;IACF;IAEA,KAAK,MAAMiF,SAAS,IAAIpF,QAAQ,CAACV,UAAU,EAAE;MAC3C,IAAI,CAAC8F,SAAS,CAAClG,WAAW,IAAI,CAACkG,SAAS,CAAC7F,MAAM,EAAE;QAC/CY,QAAQ,CAAC,yCAAyC,CAAC;QACnD;MACF;IACF;IAGAA,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,IAAIC,YAAY,EAAE;QAChB,MAAM4E,MAAM,GAAG1G,GAAG,CAACH,EAAE,EAAE,QAAQiC,YAAY,EAAE,CAAC;QAC9C,MAAM3B,MAAM,CAACuG,MAAM,EAAE;UACnB,GAAGhF,QAAQ;UACXZ,MAAM,EAAEiG,UAAU,CAACrF,QAAQ,CAACZ,MAAM;QACpC,CAAC,CAAC;QACF;MACF,CAAC,MAAM;QACL,MAAMkG,SAAS,GAAG/G,IAAI,CAACD,GAAG,CAACH,EAAE,EAAE,MAAM,CAAC,CAAC;QACvC,MAAMK,GAAG,CAAC8G,SAAS,EAAE;UACnB,GAAGtF,QAAQ;UACXZ,MAAM,EAAEiG,UAAU,CAACrF,QAAQ,CAACZ,MAAM,CAAC;UACnCmG,SAAS,EAAE7F,YAAY,CAACC,OAAO,CAAC,SAAS;QAC3C,CAAC,CAAC;QACF;MACF;MAEAM,WAAW,CAACjB,eAAe,CAAC;MAC5BqB,eAAe,CAAC,IAAI,CAAC;IAEvB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdsD,OAAO,CAACtD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpDC,QAAQ,CAAC,YAAY,GAAGD,KAAK,CAACyE,OAAO,CAAC;MACtClB,KAAK,CAAC,uBAAuB,GAAGvD,KAAK,CAACyE,OAAO,CAAC;IAChD;EACF,CAAC;EAED5G,SAAS,CAAC,MAAM;IACd,MAAMyH,OAAO,GAAGlH,GAAG,CAACH,EAAE,EAAE,MAAM,CAAC;IAC/B,MAAMsH,WAAW,GAAG9G,OAAO,CAAC6G,OAAO,EAAGrD,QAAQ,IAAK;MACjD,MAAME,IAAI,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;MAC3B,MAAMoD,UAAU,GAAG,EAAE;MAErB,KAAK,MAAMhE,EAAE,IAAIW,IAAI,EAAE;QACrB,IAAIA,IAAI,CAACX,EAAE,CAAC,CAAC6D,SAAS,KAAK9F,OAAO,EAAE;UAClCiG,UAAU,CAACnH,IAAI,CAAC;YAAEmD,EAAE;YAAE,GAAGW,IAAI,CAACX,EAAE;UAAE,CAAC,CAAC;QACtC;MACF;MACA3B,WAAW,CAAC2F,UAAU,CAAC;IACzB,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAAChG,OAAO,CAAC,CAAC;EAEb,oBACEZ,OAAA,CAAAE,SAAA;IAAA4G,QAAA,gBACE9G,OAAA,CAACZ,YAAY;MAAA2H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEhBlH,OAAA;MAAQmH,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBACpC9G,OAAA;QAASmH,SAAS,EAAC,mBAAmB;QAAAL,QAAA,eACpC9G,OAAA;UAAImH,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACVlH,OAAA;QAASmH,SAAS,EAAC,aAAa;QAAAL,QAAA,eAC9B9G,OAAA;UAAKmH,SAAS,EAAC,UAAU;UAAAL,QAAA,eACvB9G,OAAA;YAAA8G,QAAA,eACE9G,OAAA;cAAA8G,QAAA,eAAI9G,OAAA;gBAAGoH,IAAI,EAAC,SAAS;gBAAAN,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAETlH,OAAA;MAAMmH,SAAS,EAAC,uBAAuB;MAAAL,QAAA,gBAErC9G,OAAA;QAASmH,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBACtC9G,OAAA;UAAA8G,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzBlH,OAAA;UAAImH,SAAS,EAAC,WAAW;UAAAL,QAAA,EACtB7F,IAAI,CAACoG,MAAM,KAAK,CAAC,gBAChBrH,OAAA;YAAImH,SAAS,EAAC,iBAAiB;YAAAL,QAAA,eAAC9G,OAAA;cAAA8G,QAAA,EAAG;YAAgC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,GAE5EjG,IAAI,CAACkD,GAAG,CAACmD,GAAG,iBACVtH,OAAA;YAAA8G,QAAA,eACE9G,OAAA;cAASmH,SAAS,EAAC,UAAU;cAAAL,QAAA,gBAC3B9G,OAAA;gBAAQmH,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,gBACjC9G,OAAA;kBAAA8G,QAAA,EAAKQ,GAAG,CAAClH;gBAAK;kBAAA2G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpBlH,OAAA;kBAAA8G,QAAA,gBAAG9G,OAAA;oBAAA8G,QAAA,EAAQ;kBAAS;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAAChH,QAAQ;gBAAA;kBAAAyG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC,eACTlH,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,MAAE,EAACI,GAAG,CAAC/G,MAAM,GAAG+G,GAAG,CAAC/G,MAAM,CAACgH,cAAc,CAAC,CAAC,GAAG,KAAK;cAAA;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnFlH,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAS;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAAC9G,QAAQ,GAAG,IAAIoF,IAAI,CAAC0B,GAAG,CAAC9G,QAAQ,GAAG,WAAW,CAAC,CAACgH,kBAAkB,CAAC,CAAC,GAAG,KAAK;cAAA;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACpHlH,OAAA;gBAAGmH,SAAS,EAAC,iBAAiB;gBAAAL,QAAA,gBAAC9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAY;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACI,GAAG,CAACjH,WAAW;cAAA;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAGjFI,GAAG,CAAC7G,UAAU,IAAI6G,GAAG,CAAC7G,UAAU,CAAC4G,MAAM,GAAG,CAAC,iBAC9CrH,OAAA;gBAASmH,SAAS,EAAC,YAAY;gBAAAL,QAAA,gBAC/B9G,OAAA;kBAAA8G,QAAA,EAAI;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACpBlH,OAAA;kBAAA8G,QAAA,EAGCQ,GAAG,CAAC7G,UAAU,CAAC0D,GAAG,CAAC,CAACoC,SAAS,EAAEjE,KAAK,kBACnCtC,OAAA;oBAAA8G,QAAA,gBACA9G,OAAA;sBAAA8G,QAAA,EAAQ;oBAAY;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,KAAC,EAACX,SAAS,CAAClG,WAAW,EAAC,GAAC,eAAAL,OAAA;sBAAA+G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAC5DlH,OAAA;sBAAA8G,QAAA,EAAQ;oBAAO;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC,MAAE,EAACV,UAAU,CAACD,SAAS,CAAC7F,MAAM,CAAC,CAAC6G,cAAc,CAAC,CAAC;kBAAA,GAF/DjF,KAAK;oBAAAyE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAGZ,CACD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CACT,eAGGlH,OAAA;gBAAQmH,SAAS,EAAC,aAAa;gBAAAL,QAAA,gBAC7B9G,OAAA;kBAAQyH,OAAO,EAAEA,CAAA,KAAMxE,oBAAoB,CAACqE,GAAG,CAACzE,EAAE,EAAEyE,GAAG,CAAClH,KAAK,CAAE;kBAAC+G,SAAS,EAAC,kBAAkB;kBAAAL,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC1GlH,OAAA;kBAAQyH,OAAO,EAAEA,CAAA,KAAMhF,eAAe,CAAC6E,GAAG,CAAE;kBAACH,SAAS,EAAC,kBAAkB;kBAAAL,QAAA,EAAC;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACvFlH,OAAA;kBAAQyH,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACuB,GAAG,CAACzE,EAAE,CAAE;kBAACsE,SAAS,EAAC,oBAAoB;kBAAAL,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrF,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF;UAAC,GAjCHI,GAAG,CAACzE,EAAE;YAAAkE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAkCX,CACL;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEVlH,OAAA;QAASmH,SAAS,EAAC,oBAAoB;QAAC1H,GAAG,EAAEgC,cAAe;QAAAqF,QAAA,gBAClE9G,OAAA;UAAA8G,QAAA,eACE9G,OAAA;YAAA8G,QAAA,EACGpF,sBAAsB,GACnB,mBAAmBI,gBAAgB,GAAG,GACrCP,YAAY,GAAG,eAAe,GAAG;UAAiB;YAAAwF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAErD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,EAER7F,KAAK,iBAAIrB,OAAA;UAAGmH,SAAS,EAAC,WAAW;UAACO,IAAI,EAAC,OAAO;UAAAZ,QAAA,EAAEzF;QAAK;UAAA0F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAE1DxF,sBAAsB,gBACrB1B,OAAA,CAAAE,SAAA;UAAA4G,QAAA,GAEClF,UAAU,CAACyF,MAAM,KAAK,CAAC,gBACpBrH,OAAA;YAAA8G,QAAA,EAAG;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,gBAEzBlH,OAAA;YAAImH,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAC5BlF,UAAU,CAACuC,GAAG,CAACwD,SAAS,iBACvB3H,OAAA;cAAuBmH,SAAS,EAAC,gBAAgB;cAAAL,QAAA,gBAChD9G,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACS,SAAS,CAACxF,IAAI,EAAC,GAAC,EAACwF,SAAS,CAACpD,OAAO;cAAA;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACvElH,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACS,SAAS,CAAClD,MAAM;cAAA;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACjDlH,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAW;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACS,SAAS,CAACnD,UAAU;cAAA;gBAAAuC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC1DlH,OAAA;gBAAA8G,QAAA,gBAAG9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACS,SAAS,CAACjD,KAAK;cAAA;gBAAAqC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAEhDS,SAAS,CAAC1D,MAAM,CAACC,WAAW,CAAC,CAAC,KAAK,UAAU,gBAC5ClE,OAAA;gBAAKmH,SAAS,EAAC,kBAAkB;gBAACS,KAAK,EAAE;kBAAEC,eAAe,EAAE,SAAS;kBAAEC,OAAO,EAAE,MAAM;kBAAEC,YAAY,EAAE,KAAK;kBAAEC,SAAS,EAAE;gBAAO,CAAE;gBAAAlB,QAAA,gBAC/H9G,OAAA;kBAAA8G,QAAA,EAAQ;gBAA+C;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAChElH,OAAA;kBAAA8G,QAAA,GAAG,0BAAwB,eAAA9G,OAAA;oBAAGoH,IAAI,EAAE,UAAUO,SAAS,CAACjD,KAAK,EAAG;oBAAAoC,QAAA,EAAEa,SAAS,CAACjD;kBAAK;oBAAAqC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvF,CAAC,gBAENlH,OAAA;gBAAKmH,SAAS,EAAC,iBAAiB;gBAACS,KAAK,EAAE;kBAAEI,SAAS,EAAE;gBAAO,CAAE;gBAAAlB,QAAA,gBAC9D9G,OAAA;kBAAA8G,QAAA,EAAI;gBAAoC;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eAC7ClH,OAAA;kBAAQyH,OAAO,EAAEA,CAAA,KAAM5C,qBAAqB,CAAC8C,SAAS,CAAC9E,EAAE,CAAE;kBAACsE,SAAS,EAAC,YAAY;kBAAAL,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAClGlH,OAAA;kBAAQyH,OAAO,EAAEA,CAAA,KAAMlC,qBAAqB,CAACoC,SAAS,CAAC9E,EAAE,CAAE;kBAACsE,SAAS,EAAC,YAAY;kBAAAL,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7F,CACN;YAAA,GAjBQS,SAAS,CAAC9E,EAAE;cAAAkE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoBjB,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CACL,eACDlH,OAAA;YAAQyH,OAAO,EAAEA,CAAA,KAAM9F,yBAAyB,CAAC,IAAI,CAAE;YAACwF,SAAS,EAAC,YAAY;YAAAL,QAAA,EAAC;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACxG,CAAC,gBAEHlH,OAAA;UAAMiI,QAAQ,EAAE5B,YAAa;UAAAS,QAAA,gBAC3B9G,OAAA;YAAA8G,QAAA,gBACE9G,OAAA;cAAA8G,QAAA,EAASvF,YAAY,GAAG,oBAAoB,GAAG;YAAa;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eAEtElH,OAAA;cAAOkI,OAAO,EAAC,OAAO;cAAApB,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACxClH,OAAA;cAAO6C,EAAE,EAAC,OAAO;cAACsF,IAAI,EAAC,MAAM;cAAChG,IAAI,EAAC,OAAO;cAACC,KAAK,EAAEjB,QAAQ,CAACf,KAAM;cAACgI,QAAQ,EAAEpG,YAAa;cAACqG,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAErGlH,OAAA;cAAOkI,OAAO,EAAC,aAAa;cAAApB,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAChDlH,OAAA;cAAU6C,EAAE,EAAC,aAAa;cAACV,IAAI,EAAC,aAAa;cAACC,KAAK,EAAEjB,QAAQ,CAACd,WAAY;cAAC+H,QAAQ,EAAEpG,YAAa;cAACqG,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAE9GlH,OAAA;cAAOkI,OAAO,EAAC,UAAU;cAAApB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1ClH,OAAA;cAAQ6C,EAAE,EAAC,UAAU;cAACV,IAAI,EAAC,UAAU;cAACC,KAAK,EAAEjB,QAAQ,CAACb,QAAS;cAAC8H,QAAQ,EAAEpG,YAAa;cAACqG,QAAQ;cAAAvB,QAAA,gBAC9F9G,OAAA;gBAAQoC,KAAK,EAAC,EAAE;gBAACkG,QAAQ;gBAAAxB,QAAA,EAAC;cAAoB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvDlH,OAAA;gBAAQoC,KAAK,EAAC,iBAAiB;gBAAA0E,QAAA,EAAC;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxDlH,OAAA;gBAAQoC,KAAK,EAAC,QAAQ;gBAAA0E,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACtClH,OAAA;gBAAQoC,KAAK,EAAC,SAAS;gBAAA0E,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACxClH,OAAA;gBAAQoC,KAAK,EAAC,WAAW;gBAAA0E,QAAA,EAAC;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5ClH,OAAA;gBAAQoC,KAAK,EAAC,eAAe;gBAAA0E,QAAA,EAAC;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACpDlH,OAAA;gBAAQoC,KAAK,EAAC,OAAO;gBAAA0E,QAAA,EAAC;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B,CAAC,eAETlH,OAAA;cAAOkI,OAAO,EAAC,QAAQ;cAAApB,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC5ClH,OAAA;cAAO6C,EAAE,EAAC,QAAQ;cAACsF,IAAI,EAAC,QAAQ;cAAChG,IAAI,EAAC,QAAQ;cAACC,KAAK,EAAEjB,QAAQ,CAACZ,MAAO;cAAC6H,QAAQ,EAAEpG,YAAa;cAACqG,QAAQ;cAACE,GAAG,EAAC,GAAG;cAACC,IAAI,EAAC;YAAK;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAE7HlH,OAAA;cAAOkI,OAAO,EAAC,UAAU;cAAApB,QAAA,EAAC;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC1ClH,OAAA;cAAO6C,EAAE,EAAC,UAAU;cAACsF,IAAI,EAAC,MAAM;cAAChG,IAAI,EAAC,UAAU;cAACC,KAAK,EAAEjB,QAAQ,CAACX,QAAS;cAAC4H,QAAQ,EAAEpG,YAAa;cAACqG,QAAQ;YAAA;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtG,CAAC,eACXlH,OAAA;YAAA8G,QAAA,EAGH3F,QAAQ,CAACV,UAAU,CAAC0D,GAAG,CAAC,CAACoC,SAAS,EAAEjE,KAAK,kBAC1CtC,OAAA;cAAiBmH,SAAS,EAAC,iBAAiB;cAAAL,QAAA,gBAC1C9G,OAAA;gBAAA8G,QAAA,GAAO,YACK,EAACxE,KAAK,GAAG,CAAC,EAAC,eACrB,eAAAtC,OAAA;kBACEmI,IAAI,EAAC,MAAM;kBACXhG,IAAI,EAAE,yBAAyBG,KAAK,EAAG;kBACvCF,KAAK,EAAEmE,SAAS,CAAClG,WAAY;kBAC7B+H,QAAQ,EAAGnG,CAAC,IAAKI,qBAAqB,CAACC,KAAK,EAAE,aAAa,EAAEL,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;kBAC7EiG,QAAQ;gBAAA;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC,eACRlH,OAAA;gBAAA8G,QAAA,GAAO,SAEL,eAAA9G,OAAA;kBACEmI,IAAI,EAAC,QAAQ;kBACbhG,IAAI,EAAE,oBAAoBG,KAAK,EAAG;kBAClCF,KAAK,EAAEmE,SAAS,CAAC7F,MAAO;kBACxB0H,QAAQ,EAAGnG,CAAC,IAAKI,qBAAqB,CAACC,KAAK,EAAE,QAAQ,EAAEL,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;kBACxEiG,QAAQ;gBAAA;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CAAC;YAAA,GApBA5E,KAAK;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAqBV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,eAGLlH,OAAA;YAAA8G,QAAA,gBACE9G,OAAA;cAAQmI,IAAI,EAAC,QAAQ;cAAArB,QAAA,EAAEvF,YAAY,GAAG,cAAc,GAAG;YAAY;cAAAwF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,EAC5E3F,YAAY,iBACXvB,OAAA;cAAQmI,IAAI,EAAC,QAAQ;cAACV,OAAO,EAAErB,gBAAiB;cAACe,SAAS,EAAC,YAAY;cAAAL,QAAA,EAAC;YAAW;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAC5F;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACP;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEE,CAAC,eAEPlH,OAAA,CAACX,YAAY;MAAA0H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAChB,CAAC;AAEP,CAAC;AAAClG,EAAA,CAjbID,UAAU;AAAA0H,EAAA,GAAV1H,UAAU;AAmbhB,eAAeA,UAAU;AAAC,IAAA0H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2729931\\\\Desktop\\\\PULL\\\\hustlr\\\\src\\\\pages\\\\ClientPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/ClientPayments.css';\nimport { ref, get, update } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"clientWallet\");\n    if (savedWallet) setWallet(parseFloat(savedWallet));\n    const fetchJobs = async () => {\n      const userUID = localStorage.getItem(\"userUID\");\n      const acceptedRef = ref(applications_db, 'accepted_applications');\n      try {\n        const snapshot = await get(acceptedRef);\n        const jobList = [];\n        const freelancerDone = JSON.parse(localStorage.getItem(\"freelancerDoneMilestones\") || \"{}\");\n        const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\n        if (snapshot.exists()) {\n          snapshot.forEach(parentSnap => {\n            parentSnap.forEach(jobSnap => {\n              const data = jobSnap.val();\n              if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\n                data.job_milestones.forEach((milestone, index) => {\n                  const id = jobSnap.key + \"_ms_\" + index;\n                  let status = milestone.status || 'Pending';\n                  if (freelancerDone[id]) status = 'Done';\n                  if (paidMilestones[id]) status = 'Paid';\n                  jobList.push({\n                    id,\n                    jobSnapKey: parentSnap.key + '/' + jobSnap.key,\n                    index,\n                    jobTitle: data.jobTitle,\n                    client: data.name || 'Unknown',\n                    milestone: milestone.description,\n                    amount: milestone.amount,\n                    status: milestone.status || 'Pending',\n                    dueDate: milestone.duedate || 'N/A'\n                  });\n                });\n              }\n            });\n          });\n          setPayments(jobList);\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleDeposit = () => {\n    const input = prompt(\"Enter amount to deposit:\");\n    const amount = parseFloat(input);\n    if (!isNaN(amount) && amount > 0) {\n      const newBalance = wallet + amount;\n      setWallet(newBalance);\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\n      setMessage(\"Deposit successful\");\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      alert(\"Invalid amount entered.\");\n    }\n  };\n  const handlePay = async payment => {\n    if (wallet < payment.amount) {\n      alert(\"Insufficient funds.\");\n      return;\n    }\n    try {\n      const newWallet = wallet - parseFloat(payment.amount);\n      const freelancerWallet = parseFloat(localStorage.getItem(\"freelancerWallet\") || \"0\");\n      const updatedFreelancerWallet = freelancerWallet + parseFloat(payment.amount);\n\n      // Update milestone status in database\n      const milestoneRef = ref(applications_db, `accepted_applications/${payment.jobSnapKey}/job_milestones/${payment.index}`);\n      await update(milestoneRef, {\n        status: \"Paid\"\n      });\n      localStorage.setItem(\"clientWallet\", newWallet.toString());\n      localStorage.setItem(\"freelancerWallet\", updatedFreelancerWallet.toString());\n      setWallet(newWallet);\n      setPayments(prev => prev.map(p => p.id === payment.id ? {\n        ...p,\n        status: 'Paid'\n      } : p));\n    } catch (err) {\n      console.error(\"Error updating milestone as Paid:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"client-payments-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Jobs for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/client\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"payments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payments for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeposit,\n          className: \"deposit-button\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Client Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", wallet.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by freelancer or job title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"payments-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: payments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No payments available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this) : payments.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.milestone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", job.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status ${job.status.toLowerCase()}`,\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.dueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.status === 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mark-paid-btn\",\n                onClick: () => handlePay(job),\n                children: \"Pay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientPayments, \"7lJApnbD+JGB6+OAA5V1+PGgAJc=\");\n_c = ClientPayments;\nexport default ClientPayments;\nvar _c;\n$RefreshReg$(_c, \"ClientPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","applications_db","jsxDEV","_jsxDEV","ClientPayments","_s","payments","setPayments","wallet","setWallet","message","setMessage","savedWallet","localStorage","getItem","parseFloat","fetchJobs","userUID","acceptedRef","snapshot","jobList","freelancerDone","JSON","parse","paidMilestones","exists","forEach","parentSnap","jobSnap","data","val","applicant_userUID","Array","isArray","job_milestones","milestone","index","id","key","status","push","jobSnapKey","jobTitle","client","name","description","amount","dueDate","duedate","error","console","handleDeposit","input","prompt","isNaN","newBalance","setItem","toString","setTimeout","alert","handlePay","payment","newWallet","freelancerWallet","updatedFreelancerWallet","milestoneRef","prev","map","p","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","style","display","alignItems","justifyContent","onClick","toFixed","type","placeholder","length","colSpan","job","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/2729931/Desktop/PULL/hustlr/src/pages/ClientPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/ClientPayments.css';\r\nimport { ref, get,update } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\n\r\nconst ClientPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"clientWallet\");\r\n    if (savedWallet) setWallet(parseFloat(savedWallet));\r\n\r\n    const fetchJobs = async () => {\r\n      const userUID = localStorage.getItem(\"userUID\");\r\n      const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n      try {\r\n        const snapshot = await get(acceptedRef);\r\n        const jobList = [];\r\n        const freelancerDone = JSON.parse(localStorage.getItem(\"freelancerDoneMilestones\") || \"{}\");\r\n        const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\r\n\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(parentSnap => {\r\n            parentSnap.forEach(jobSnap => {\r\n              const data = jobSnap.val();\r\n              if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\r\n                data.job_milestones.forEach((milestone, index) => {\r\n                  const id = jobSnap.key + \"_ms_\" + index;\r\n                  let status = milestone.status || 'Pending';\r\n                  if (freelancerDone[id]) status = 'Done';\r\n                  if (paidMilestones[id]) status = 'Paid';\r\n\r\n                  jobList.push({\r\n                              id,\r\n                              jobSnapKey: parentSnap.key + '/' + jobSnap.key,\r\n                              index,\r\n                              jobTitle: data.jobTitle,\r\n                              client: data.name || 'Unknown',\r\n                              milestone: milestone.description,\r\n                              amount: milestone.amount,\r\n                              status: milestone.status || 'Pending',\r\n                              dueDate: milestone.duedate || 'N/A'\r\n                    });\r\n                });\r\n              }\r\n            });\r\n          });\r\n          setPayments(jobList);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleDeposit = () => {\r\n    const input = prompt(\"Enter amount to deposit:\");\r\n    const amount = parseFloat(input);\r\n    if (!isNaN(amount) && amount > 0) {\r\n      const newBalance = wallet + amount;\r\n      setWallet(newBalance);\r\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\r\n      setMessage(\"Deposit successful\");\r\n      setTimeout(() => setMessage(''), 3000);\r\n    } else {\r\n      alert(\"Invalid amount entered.\");\r\n    }\r\n  };\r\n\r\n const handlePay = async (payment) => {\r\n  if (wallet < payment.amount) {\r\n    alert(\"Insufficient funds.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const newWallet = wallet - parseFloat(payment.amount);\r\n    const freelancerWallet = parseFloat(localStorage.getItem(\"freelancerWallet\") || \"0\");\r\n    const updatedFreelancerWallet = freelancerWallet + parseFloat(payment.amount);\r\n\r\n    // Update milestone status in database\r\n    const milestoneRef = ref(applications_db, `accepted_applications/${payment.jobSnapKey}/job_milestones/${payment.index}`);\r\n    await update(milestoneRef, { status: \"Paid\" });\r\n\r\n    localStorage.setItem(\"clientWallet\", newWallet.toString());\r\n    localStorage.setItem(\"freelancerWallet\", updatedFreelancerWallet.toString());\r\n\r\n    setWallet(newWallet);\r\n    setPayments(prev =>\r\n      prev.map(p => p.id === payment.id ? { ...p, status: 'Paid' } : p)\r\n    );\r\n  } catch (err) {\r\n    console.error(\"Error updating milestone as Paid:\", err);\r\n  }\r\n};\r\n\r\n\r\n\r\n  return (\r\n    <main className=\"client-payments-main\">\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Jobs for Clients</h1>\r\n        </section>\r\n\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/client\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <section className=\"payments-section\">\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <h2>Payments for Clients</h2>\r\n          <button onClick={handleDeposit} className=\"deposit-button\">Deposit</button>\r\n        </div>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n\r\n        <section className=\"wallet-section\">\r\n          <h3>Client Wallet</h3>\r\n          <p>Balance: ${wallet.toFixed(2)}</p>\r\n        </section>\r\n        <section className=\"filters\">\r\n          <input type=\"text\" placeholder=\"Search by freelancer or job title\" />\r\n          <select>\r\n            <option>All</option>\r\n            <option>Paid</option>\r\n            <option>Pending</option>\r\n            <option>Overdue</option>\r\n          </select>\r\n          <input type=\"date\" />\r\n          <input type=\"date\" />\r\n          <button>Export CSV</button>\r\n        </section>\r\n\r\n        <table className=\"payments-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Job Title</th>\r\n              <th>Freelancer</th>\r\n              <th>Milestone</th>\r\n              <th>Amount</th>\r\n              <th>Status</th>\r\n              <th>Due Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {payments.length === 0 ? (\r\n              <tr><td colSpan=\"7\">No payments available.</td></tr>\r\n            ) : (\r\n              payments.map(job => (\r\n                <tr key={job.id}>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.client}</td>\r\n                  <td>{job.milestone}</td>\r\n                  <td>${job.amount}</td>\r\n                  <td><span className={`status ${job.status.toLowerCase()}`}>{job.status}</span></td>\r\n                  <td>{job.dueDate}</td>\r\n                  <td>\r\n                    {job.status === 'Done' && (\r\n                      <button className=\"mark-paid-btn\" onClick={() => handlePay(job)}>\r\n                        Pay\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,mCAAmC;AAC1C,SAASC,GAAG,EAAEC,GAAG,EAACC,MAAM,QAAQ,mBAAmB;AACnD,SAASC,eAAe,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMgB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,IAAIF,WAAW,EAAEH,SAAS,CAACM,UAAU,CAACH,WAAW,CAAC,CAAC;IAEnD,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAGJ,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC;MAC/C,MAAMI,WAAW,GAAGpB,GAAG,CAACG,eAAe,EAAE,uBAAuB,CAAC;MAEjE,IAAI;QACF,MAAMkB,QAAQ,GAAG,MAAMpB,GAAG,CAACmB,WAAW,CAAC;QACvC,MAAME,OAAO,GAAG,EAAE;QAClB,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,IAAI,IAAI,CAAC;QAC3F,MAAMU,cAAc,GAAGF,IAAI,CAACC,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,IAAI,IAAI,CAAC;QAEjF,IAAIK,QAAQ,CAACM,MAAM,CAAC,CAAC,EAAE;UACrBN,QAAQ,CAACO,OAAO,CAACC,UAAU,IAAI;YAC7BA,UAAU,CAACD,OAAO,CAACE,OAAO,IAAI;cAC5B,MAAMC,IAAI,GAAGD,OAAO,CAACE,GAAG,CAAC,CAAC;cAC1B,IAAID,IAAI,CAACE,iBAAiB,KAAKd,OAAO,IAAIe,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACK,cAAc,CAAC,EAAE;gBAC5EL,IAAI,CAACK,cAAc,CAACR,OAAO,CAAC,CAACS,SAAS,EAAEC,KAAK,KAAK;kBAChD,MAAMC,EAAE,GAAGT,OAAO,CAACU,GAAG,GAAG,MAAM,GAAGF,KAAK;kBACvC,IAAIG,MAAM,GAAGJ,SAAS,CAACI,MAAM,IAAI,SAAS;kBAC1C,IAAIlB,cAAc,CAACgB,EAAE,CAAC,EAAEE,MAAM,GAAG,MAAM;kBACvC,IAAIf,cAAc,CAACa,EAAE,CAAC,EAAEE,MAAM,GAAG,MAAM;kBAEvCnB,OAAO,CAACoB,IAAI,CAAC;oBACDH,EAAE;oBACFI,UAAU,EAAEd,UAAU,CAACW,GAAG,GAAG,GAAG,GAAGV,OAAO,CAACU,GAAG;oBAC9CF,KAAK;oBACLM,QAAQ,EAAEb,IAAI,CAACa,QAAQ;oBACvBC,MAAM,EAAEd,IAAI,CAACe,IAAI,IAAI,SAAS;oBAC9BT,SAAS,EAAEA,SAAS,CAACU,WAAW;oBAChCC,MAAM,EAAEX,SAAS,CAACW,MAAM;oBACxBP,MAAM,EAAEJ,SAAS,CAACI,MAAM,IAAI,SAAS;oBACrCQ,OAAO,EAAEZ,SAAS,CAACa,OAAO,IAAI;kBACxC,CAAC,CAAC;gBACN,CAAC,CAAC;cACJ;YACF,CAAC,CAAC;UACJ,CAAC,CAAC;UACFzC,WAAW,CAACa,OAAO,CAAC;QACtB;MACF,CAAC,CAAC,OAAO6B,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDjC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmC,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMC,KAAK,GAAGC,MAAM,CAAC,0BAA0B,CAAC;IAChD,MAAMP,MAAM,GAAG/B,UAAU,CAACqC,KAAK,CAAC;IAChC,IAAI,CAACE,KAAK,CAACR,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;MAChC,MAAMS,UAAU,GAAG/C,MAAM,GAAGsC,MAAM;MAClCrC,SAAS,CAAC8C,UAAU,CAAC;MACrB1C,YAAY,CAAC2C,OAAO,CAAC,cAAc,EAAED,UAAU,CAACE,QAAQ,CAAC,CAAC,CAAC;MAC3D9C,UAAU,CAAC,oBAAoB,CAAC;MAChC+C,UAAU,CAAC,MAAM/C,UAAU,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;IACxC,CAAC,MAAM;MACLgD,KAAK,CAAC,yBAAyB,CAAC;IAClC;EACF,CAAC;EAEF,MAAMC,SAAS,GAAG,MAAOC,OAAO,IAAK;IACpC,IAAIrD,MAAM,GAAGqD,OAAO,CAACf,MAAM,EAAE;MAC3Ba,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACF;IAEA,IAAI;MACF,MAAMG,SAAS,GAAGtD,MAAM,GAAGO,UAAU,CAAC8C,OAAO,CAACf,MAAM,CAAC;MACrD,MAAMiB,gBAAgB,GAAGhD,UAAU,CAACF,YAAY,CAACC,OAAO,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC;MACpF,MAAMkD,uBAAuB,GAAGD,gBAAgB,GAAGhD,UAAU,CAAC8C,OAAO,CAACf,MAAM,CAAC;;MAE7E;MACA,MAAMmB,YAAY,GAAGnE,GAAG,CAACG,eAAe,EAAE,yBAAyB4D,OAAO,CAACpB,UAAU,mBAAmBoB,OAAO,CAACzB,KAAK,EAAE,CAAC;MACxH,MAAMpC,MAAM,CAACiE,YAAY,EAAE;QAAE1B,MAAM,EAAE;MAAO,CAAC,CAAC;MAE9C1B,YAAY,CAAC2C,OAAO,CAAC,cAAc,EAAEM,SAAS,CAACL,QAAQ,CAAC,CAAC,CAAC;MAC1D5C,YAAY,CAAC2C,OAAO,CAAC,kBAAkB,EAAEQ,uBAAuB,CAACP,QAAQ,CAAC,CAAC,CAAC;MAE5EhD,SAAS,CAACqD,SAAS,CAAC;MACpBvD,WAAW,CAAC2D,IAAI,IACdA,IAAI,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC/B,EAAE,KAAKwB,OAAO,CAACxB,EAAE,GAAG;QAAE,GAAG+B,CAAC;QAAE7B,MAAM,EAAE;MAAO,CAAC,GAAG6B,CAAC,CAClE,CAAC;IACH,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZnB,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEoB,GAAG,CAAC;IACzD;EACF,CAAC;EAIC,oBACElE,OAAA;IAAMmE,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACpCpE,OAAA;MAAQmE,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBACpCpE,OAAA;QAASmE,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eACpCpE,OAAA;UAAImE,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eAEVxE,OAAA;QAASmE,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC9BpE,OAAA;UAAKmE,SAAS,EAAC,UAAU;UAAAC,QAAA,eACvBpE,OAAA;YAAAoE,QAAA,eACEpE,OAAA;cAAAoE,QAAA,eAAIpE,OAAA;gBAAGyE,IAAI,EAAC,SAAS;gBAAAL,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAETxE,OAAA;MAASmE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBACnCpE,OAAA;QAAK0E,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,UAAU,EAAE,QAAQ;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAT,QAAA,gBACrFpE,OAAA;UAAAoE,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BxE,OAAA;UAAQ8E,OAAO,EAAE9B,aAAc;UAACmB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxE,CAAC,EAELjE,OAAO,iBAAIP,OAAA;QAAGmE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAE7D;MAAO;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExDxE,OAAA;QAASmE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBACjCpE,OAAA;UAAAoE,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBxE,OAAA;UAAAoE,QAAA,GAAG,YAAU,EAAC/D,MAAM,CAAC0E,OAAO,CAAC,CAAC,CAAC;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACVxE,OAAA;QAASmE,SAAS,EAAC,SAAS;QAAAC,QAAA,gBAC1BpE,OAAA;UAAOgF,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAAmC;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrExE,OAAA;UAAAoE,QAAA,gBACEpE,OAAA;YAAAoE,QAAA,EAAQ;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACpBxE,OAAA;YAAAoE,QAAA,EAAQ;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACrBxE,OAAA;YAAAoE,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxBxE,OAAA;YAAAoE,QAAA,EAAQ;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACTxE,OAAA;UAAOgF,IAAI,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrBxE,OAAA;UAAOgF,IAAI,EAAC;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrBxE,OAAA;UAAAoE,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAEVxE,OAAA;QAAOmE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC/BpE,OAAA;UAAAoE,QAAA,eACEpE,OAAA;YAAAoE,QAAA,gBACEpE,OAAA;cAAAoE,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBxE,OAAA;cAAAoE,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBxE,OAAA;cAAAoE,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBxE,OAAA;cAAAoE,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfxE,OAAA;cAAAoE,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfxE,OAAA;cAAAoE,QAAA,EAAI;YAAQ;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBxE,OAAA;cAAAoE,QAAA,EAAI;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACb;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRxE,OAAA;UAAAoE,QAAA,EACGjE,QAAQ,CAAC+E,MAAM,KAAK,CAAC,gBACpBlF,OAAA;YAAAoE,QAAA,eAAIpE,OAAA;cAAImF,OAAO,EAAC,GAAG;cAAAf,QAAA,EAAC;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,GAEpDrE,QAAQ,CAAC6D,GAAG,CAACoB,GAAG,iBACdpF,OAAA;YAAAoE,QAAA,gBACEpE,OAAA;cAAAoE,QAAA,EAAKgB,GAAG,CAAC7C;YAAQ;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBxE,OAAA;cAAAoE,QAAA,EAAKgB,GAAG,CAAC5C;YAAM;cAAA6B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrBxE,OAAA;cAAAoE,QAAA,EAAKgB,GAAG,CAACpD;YAAS;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBxE,OAAA;cAAAoE,QAAA,GAAI,GAAC,EAACgB,GAAG,CAACzC,MAAM;YAAA;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBxE,OAAA;cAAAoE,QAAA,eAAIpE,OAAA;gBAAMmE,SAAS,EAAE,UAAUiB,GAAG,CAAChD,MAAM,CAACiD,WAAW,CAAC,CAAC,EAAG;gBAAAjB,QAAA,EAAEgB,GAAG,CAAChD;cAAM;gBAAAiC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnFxE,OAAA;cAAAoE,QAAA,EAAKgB,GAAG,CAACxC;YAAO;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBxE,OAAA;cAAAoE,QAAA,EACGgB,GAAG,CAAChD,MAAM,KAAK,MAAM,iBACpBpC,OAAA;gBAAQmE,SAAS,EAAC,eAAe;gBAACW,OAAO,EAAEA,CAAA,KAAMrB,SAAS,CAAC2B,GAAG,CAAE;gBAAAhB,QAAA,EAAC;cAEjE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YACT;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA,GAbEY,GAAG,CAAClD,EAAE;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcX,CACL;QACF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEX,CAAC;AAACtE,EAAA,CAlLID,cAAc;AAAAqF,EAAA,GAAdrF,cAAc;AAoLpB,eAAeA,cAAc;AAAC,IAAAqF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mogor\\\\Desktop\\\\project\\\\hustlr\\\\src\\\\pages\\\\ClientPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/ClientPayments.css';\nimport { ref, get, update, onValue, runTransaction } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [message, setMessage] = useState('');\n  const fetchAcceptedJobs = async () => {\n    const userUID = localStorage.getItem(\"userUID\");\n    const acceptedRef = ref(applications_db, 'accepted_applications');\n    try {\n      const snapshot = await get(acceptedRef);\n      const jobList = [];\n      if (snapshot.exists()) {\n        snapshot.forEach(parentSnap => {\n          parentSnap.forEach(jobSnap => {\n            const data = jobSnap.val();\n            if (data.applicant_userUID === userUID || data.client_userUID === userUID) {\n              data.job_milestones.forEach((milestone, index) => {\n                jobList.push({\n                  id: jobSnap.key + \"_ms_\" + index,\n                  jobKey: jobSnap.key,\n                  milestoneIndex: index,\n                  jobTitle: data.jobTitle,\n                  client: data.clientName || 'Unknown',\n                  freelancerUID: data.applicant_userUID,\n                  clientUID: data.client_userUID,\n                  milestone: milestone.description,\n                  amount: milestone.amount,\n                  status: milestone.status || 'Pending',\n                  dueDate: milestone.dueDate || 'N/A'\n                });\n              });\n            }\n          });\n        });\n        setPayments(jobList);\n      }\n    } catch (error) {\n      console.error(\"Error fetching accepted jobs:\", error);\n    }\n  };\n  const handlePaymentStatusChange = async (paymentId, newStatus) => {\n    const payment = payments.find(p => p.id === paymentId);\n    if (!payment) return;\n    const {\n      jobKey,\n      milestoneIndex,\n      amount,\n      freelancerUID,\n      clientUID\n    } = payment;\n    const milestoneRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\n    const clientWalletRef = ref(applications_db, `wallets/${clientUID}`);\n    const freelancerWalletRef = ref(applications_db, `wallets/${freelancerUID}`);\n    if (newStatus === \"Paid\") {\n      try {\n        await runTransaction(clientWalletRef, currentClientBalance => {\n          if (currentClientBalance == null || currentClientBalance < amount) {\n            throw new Error(\"Insufficient balance in client wallet.\");\n          }\n          return currentClientBalance - amount;\n        });\n        await runTransaction(freelancerWalletRef, currentFreelancerBalance => {\n          return (currentFreelancerBalance || 0) + amount;\n        });\n        await update(milestoneRef, {\n          status: \"Paid\"\n        });\n        const updated = payments.map(p => p.id === paymentId ? {\n          ...p,\n          status: \"Paid\"\n        } : p);\n        setPayments(updated);\n        const updatedWalletSnap = await get(clientWalletRef);\n        if (updatedWalletSnap.exists()) {\n          const newWallet = updatedWalletSnap.val();\n          setWallet(newWallet);\n          localStorage.setItem(\"clientWallet\", newWallet.toString());\n        }\n        setMessage(\"Payment successful.\");\n        setTimeout(() => setMessage(\"\"), 3000);\n      } catch (error) {\n        console.error(\"Payment error:\", error.message);\n        alert(error.message);\n      }\n    } else {\n      try {\n        await update(milestoneRef, {\n          status: newStatus\n        });\n        const updated = payments.map(p => p.id === paymentId ? {\n          ...p,\n          status: newStatus\n        } : p);\n        setPayments(updated);\n      } catch (error) {\n        console.error(\"Status update error:\", error.message);\n      }\n    }\n  };\n  const handleDeposit = () => {\n    const input = prompt(\"Enter amount to deposit:\");\n    const amount = parseFloat(input);\n    if (!isNaN(amount) && amount > 0) {\n      const userUID = localStorage.getItem(\"userUID\");\n      const walletRef = ref(applications_db, `wallets/${userUID}`);\n      runTransaction(walletRef, currentBalance => {\n        return (currentBalance || 0) + amount;\n      }).then(({\n        snapshot\n      }) => {\n        const newBalance = snapshot.val();\n        setWallet(newBalance);\n        localStorage.setItem(\"clientWallet\", newBalance.toString());\n        setMessage(\"Deposit successful\");\n        setTimeout(() => setMessage(''), 3000);\n      }).catch(error => {\n        console.error(\"Deposit failed:\", error.message);\n      });\n    } else {\n      alert(\"Invalid amount entered.\");\n    }\n  };\n  useEffect(() => {\n    fetchAcceptedJobs();\n  }, []);\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"clientWallet\");\n    if (savedWallet) setWallet(parseFloat(savedWallet));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"client-payments-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Jobs for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/client\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"payments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payments for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeposit,\n          className: \"deposit-button\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Client Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", wallet.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"payments-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: payments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No payments available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this) : payments.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.milestone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", job.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status ${job.status.toLowerCase()}`,\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.dueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.status === \"Done\" ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mark-paid-btn\",\n                onClick: () => handlePaymentStatusChange(job.id, 'Paid'),\n                children: \"Mark as Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\u2014\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 19\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientPayments, \"zCf3CE0667YJrNF1szJmHdpBrmE=\");\n_c = ClientPayments;\nexport default ClientPayments;\nvar _c;\n$RefreshReg$(_c, \"ClientPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","onValue","runTransaction","applications_db","jsxDEV","_jsxDEV","ClientPayments","_s","payments","setPayments","wallet","setWallet","message","setMessage","fetchAcceptedJobs","userUID","localStorage","getItem","acceptedRef","snapshot","jobList","exists","forEach","parentSnap","jobSnap","data","val","applicant_userUID","client_userUID","job_milestones","milestone","index","push","id","key","jobKey","milestoneIndex","jobTitle","client","clientName","freelancerUID","clientUID","description","amount","status","dueDate","error","console","handlePaymentStatusChange","paymentId","newStatus","payment","find","p","milestoneRef","clientWalletRef","freelancerWalletRef","currentClientBalance","Error","currentFreelancerBalance","updated","map","updatedWalletSnap","newWallet","setItem","toString","setTimeout","alert","handleDeposit","input","prompt","parseFloat","isNaN","walletRef","currentBalance","then","newBalance","catch","savedWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","style","display","alignItems","justifyContent","onClick","toFixed","length","colSpan","job","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/mogor/Desktop/project/hustlr/src/pages/ClientPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/ClientPayments.css';\r\nimport { ref, get, update, onValue, runTransaction } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\n\r\nconst ClientPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const fetchAcceptedJobs = async () => {\r\n    const userUID = localStorage.getItem(\"userUID\");\r\n    const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n    try {\r\n      const snapshot = await get(acceptedRef);\r\n      const jobList = [];\r\n\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(parentSnap => {\r\n          parentSnap.forEach(jobSnap => {\r\n            const data = jobSnap.val();\r\n            if (data.applicant_userUID === userUID || data.client_userUID === userUID) {\r\n              data.job_milestones.forEach((milestone, index) => {\r\n                jobList.push({\r\n                  id: jobSnap.key + \"_ms_\" + index,\r\n                  jobKey: jobSnap.key,\r\n                  milestoneIndex: index,\r\n                  jobTitle: data.jobTitle,\r\n                  client: data.clientName || 'Unknown',\r\n                  freelancerUID: data.applicant_userUID,\r\n                  clientUID: data.client_userUID,\r\n                  milestone: milestone.description,\r\n                  amount: milestone.amount,\r\n                  status: milestone.status || 'Pending',\r\n                  dueDate: milestone.dueDate || 'N/A'\r\n                });\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        setPayments(jobList);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching accepted jobs:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePaymentStatusChange = async (paymentId, newStatus) => {\r\n    const payment = payments.find(p => p.id === paymentId);\r\n    if (!payment) return;\r\n\r\n    const { jobKey, milestoneIndex, amount, freelancerUID, clientUID } = payment;\r\n    const milestoneRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\r\n    const clientWalletRef = ref(applications_db, `wallets/${clientUID}`);\r\n    const freelancerWalletRef = ref(applications_db, `wallets/${freelancerUID}`);\r\n\r\n    if (newStatus === \"Paid\") {\r\n      try {\r\n        await runTransaction(clientWalletRef, (currentClientBalance) => {\r\n          if (currentClientBalance == null || currentClientBalance < amount) {\r\n            throw new Error(\"Insufficient balance in client wallet.\");\r\n          }\r\n          return currentClientBalance - amount;\r\n        });\r\n\r\n        await runTransaction(freelancerWalletRef, (currentFreelancerBalance) => {\r\n          return (currentFreelancerBalance || 0) + amount;\r\n        });\r\n\r\n        await update(milestoneRef, { status: \"Paid\" });\r\n\r\n        const updated = payments.map(p =>\r\n          p.id === paymentId ? { ...p, status: \"Paid\" } : p\r\n        );\r\n        setPayments(updated);\r\n\r\n        const updatedWalletSnap = await get(clientWalletRef);\r\n        if (updatedWalletSnap.exists()) {\r\n          const newWallet = updatedWalletSnap.val();\r\n          setWallet(newWallet);\r\n          localStorage.setItem(\"clientWallet\", newWallet.toString());\r\n        }\r\n\r\n        setMessage(\"Payment successful.\");\r\n        setTimeout(() => setMessage(\"\"), 3000);\r\n      } catch (error) {\r\n        console.error(\"Payment error:\", error.message);\r\n        alert(error.message);\r\n      }\r\n    } else {\r\n      try {\r\n        await update(milestoneRef, { status: newStatus });\r\n        const updated = payments.map(p =>\r\n          p.id === paymentId ? { ...p, status: newStatus } : p\r\n        );\r\n        setPayments(updated);\r\n      } catch (error) {\r\n        console.error(\"Status update error:\", error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeposit = () => {\r\n    const input = prompt(\"Enter amount to deposit:\");\r\n    const amount = parseFloat(input);\r\n\r\n    if (!isNaN(amount) && amount > 0) {\r\n      const userUID = localStorage.getItem(\"userUID\");\r\n      const walletRef = ref(applications_db, `wallets/${userUID}`);\r\n\r\n      runTransaction(walletRef, (currentBalance) => {\r\n        return (currentBalance || 0) + amount;\r\n      }).then(({ snapshot }) => {\r\n        const newBalance = snapshot.val();\r\n        setWallet(newBalance);\r\n        localStorage.setItem(\"clientWallet\", newBalance.toString());\r\n        setMessage(\"Deposit successful\");\r\n        setTimeout(() => setMessage(''), 3000);\r\n      }).catch(error => {\r\n        console.error(\"Deposit failed:\", error.message);\r\n      });\r\n    } else {\r\n      alert(\"Invalid amount entered.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAcceptedJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"clientWallet\");\r\n    if (savedWallet) setWallet(parseFloat(savedWallet));\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"client-payments-main\">\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Jobs for Clients</h1>\r\n        </section>\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/client\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <section className=\"payments-section\">\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <h2>Payments for Clients</h2>\r\n          <button onClick={handleDeposit} className=\"deposit-button\">Deposit</button>\r\n        </div>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n\r\n        <section className=\"wallet-section\">\r\n          <h3>Client Wallet</h3>\r\n          <p>Balance: ${wallet.toFixed(2)}</p>\r\n        </section>\r\n\r\n        <table className=\"payments-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Job Title</th>\r\n              <th>Freelancer</th>\r\n              <th>Milestone</th>\r\n              <th>Amount</th>\r\n              <th>Status</th>\r\n              <th>Due Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {payments.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"7\">No payments available.</td>\r\n              </tr>\r\n            ) : (\r\n              payments.map((job) => (\r\n                <tr key={job.id}>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.client}</td>\r\n                  <td>{job.milestone}</td>\r\n                  <td>${job.amount}</td>\r\n                  <td>\r\n                    <span className={`status ${job.status.toLowerCase()}`}>\r\n                      {job.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>{job.dueDate}</td>\r\n                  <td>\r\n                    {job.status === \"Done\" ? (\r\n                      <button className=\"mark-paid-btn\" onClick={() => handlePaymentStatusChange(job.id, 'Paid')}>\r\n                        Mark as Paid\r\n                      </button>\r\n                    ) : (\r\n                      <span>—</span>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
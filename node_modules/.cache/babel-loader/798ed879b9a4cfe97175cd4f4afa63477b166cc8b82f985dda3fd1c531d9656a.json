{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mogor\\\\Desktop\\\\project\\\\hustlr\\\\src\\\\pages\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport '../stylesheets/signup_style.css';\n//import logo from '../images/logo.png';\nimport google_icon from '../images/google_icon.png';\nimport micro_icon from '../images/micro_icon.svg';\n// Import Firebase modules\nimport { googleAuth, google_db, microsoftAuth, microsoft_db } from \"../firebaseConfig\";\nimport { get, ref, set, child } from \"firebase/database\";\nimport { GoogleAuthProvider, OAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\n// Use only one Firebase for google\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst googleProvider = new GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\n\n// Microsoft provider\nconst microsoftProvider = new OAuthProvider(\"microsoft.com\");\nmicrosoftProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nconst adminEmails = [\"2680440@students.wits.ac.za\", \"1602758@students.wits.ac.za\"];\nconst SignUp = () => {\n  _s();\n  const navigate = useNavigate();\n  const goToPage = role => {\n    switch (role.toLowerCase()) {\n      case \"client\":\n        navigate(\"/Client\");\n        break;\n      case \"freelancer\":\n        navigate(\"/Freelancer\");\n        break;\n      case \"admin\":\n        navigate(\"/Admin\");\n        break;\n      default:\n        alert(\"Unknown role selected.\");\n    }\n  };\n  const handleGoogleSignInClick = () => {\n    signInWithPopup(googleAuth, googleProvider).then(result => {\n      const user = result.user;\n      const userRef = ref(google_db, 'users/' + user.uid);\n      localStorage.setItem(\"userUID\", user.uid);\n      localStorage.setItem(\"userName\", user.displayName);\n      localStorage.setItem(\"userEmail\", user.email);\n\n      // Check if user already exists\n      get(userRef).then(snapshot => {\n        var _document$querySelect;\n        if (snapshot.exists()) {\n          alert(\"User already exists. Redirecting you to Sign In...\");\n          navigate(\"/SignIn\"); // Adjust this route to match your sign-in page\n          return;\n        }\n        const role = (_document$querySelect = document.querySelector('input[name=\"role\"]:checked')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.value;\n        if (!role) {\n          alert(\"Please select a role before signing up.\");\n          return;\n        }\n\n        // Save new user only if they don't already exist\n        set(userRef, {\n          role: role\n        });\n        goToPage(role);\n      });\n    }).catch(error => {\n      console.error(\"Google sign-in error:\", error);\n      alert(\"404 error signing in!\");\n    });\n  };\n  const handleMicrosoftSignIn = async () => {\n    try {\n      var _document$querySelect2;\n      const result = await signInWithPopup(microsoftAuth, microsoftProvider);\n      const user = result.user;\n      const userRef = ref(microsoft_db, 'users/' + user.uid);\n      localStorage.setItem(\"userUID\", user.uid);\n      localStorage.setItem(\"userName\", user.displayName);\n      localStorage.setItem(\"userEmail\", user.email);\n\n      // Check if user already exists\n      const snapshot = await get(userRef);\n      if (snapshot.exists()) {\n        alert(\"User already exists. Redirecting you to Sign In...\");\n        navigate(\"/SignIn\"); // Adjust this route to match your sign-in page\n        return;\n      }\n      const role = (_document$querySelect2 = document.querySelector('input[name=\"role\"]:checked')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2.value;\n      if (!role) {\n        alert(\"Please select a role before signing up.\");\n        return;\n      }\n\n      // Save new user only if they don't already exist\n      await set(userRef, {\n        role: role\n      });\n      goToPage(role);\n    } catch (error) {\n      console.error(\"Microsoft sign-in error:\", error);\n      alert(\"Sign-in failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"hero_sect\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hustlr-header\",\n        children: \"Hustlr.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"signup-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"signup-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sign up to Hustlr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Pick a role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"signup-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            htmlFor: \"Client\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"Client\",\n              name: \"role\",\n              value: \"Client\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), \"Client\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-control\",\n            htmlFor: \"Freelancer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"Freelancer\",\n              name: \"role\",\n              value: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), \"Freelancer\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"signup-form\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"googlebtn\",\n            type: \"button\",\n            className: \"googlebtn\",\n            onClick: handleGoogleSignInClick,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: google_icon,\n              alt: \"g_logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), \"Sign in with Google\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"ms_sign msbutton_sect\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"ms-signin-btn\",\n            className: \"msbutton\",\n            onClick: handleMicrosoftSignIn,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: micro_icon,\n              alt: \"micro_logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this), \"Sign in with Microsoft\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already a user ? \", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/SignIn\",\n            rel: \"noopener noreferrer\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n          className: \"signup-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"By clicking sign up, you agree to our\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"terms.html\",\n              rel: \"noopener noreferrer\",\n              children: \"Terms of Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SignUp, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","google_icon","micro_icon","googleAuth","google_db","microsoftAuth","microsoft_db","get","ref","set","child","GoogleAuthProvider","OAuthProvider","signInWithPopup","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","googleProvider","setCustomParameters","prompt","microsoftProvider","adminEmails","SignUp","_s","navigate","goToPage","role","toLowerCase","alert","handleGoogleSignInClick","then","result","user","userRef","uid","localStorage","setItem","displayName","email","snapshot","_document$querySelect","exists","document","querySelector","value","catch","error","console","handleMicrosoftSignIn","_document$querySelect2","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","onClick","src","alt","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/mogor/Desktop/project/hustlr/src/pages/SignUp.js"],"sourcesContent":["import React from \"react\";\r\nimport '../stylesheets/signup_style.css';\r\n//import logo from '../images/logo.png';\r\nimport google_icon from '../images/google_icon.png';\r\nimport micro_icon from '../images/micro_icon.svg';\r\n// Import Firebase modules\r\nimport { googleAuth, google_db, microsoftAuth, microsoft_db} from \"../firebaseConfig\";\r\nimport { get,ref, set, child} from \"firebase/database\";\r\nimport { GoogleAuthProvider, OAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport { useNavigate } from 'react-router-dom';\r\n// Use only one Firebase for google\r\n\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\n// Microsoft provider\r\nconst microsoftProvider = new OAuthProvider(\"microsoft.com\");\r\nmicrosoftProvider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nconst adminEmails = [\r\n\r\n  \"2680440@students.wits.ac.za\",\r\n  \"1602758@students.wits.ac.za\",\r\n  \r\n];\r\nconst SignUp = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const goToPage = (role) => {\r\n    switch (role.toLowerCase()) {\r\n      case \"client\":\r\n        navigate(\"/Client\");\r\n        break;\r\n      case \"freelancer\":\r\n        navigate(\"/Freelancer\");\r\n        break;\r\n      case \"admin\":\r\n        navigate(\"/Admin\");\r\n        break;\r\n      default:\r\n        alert(\"Unknown role selected.\");\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignInClick = () => {\r\n    signInWithPopup(googleAuth, googleProvider)\r\n      .then((result) => {\r\n        const user = result.user;\r\n        const userRef = ref(google_db, 'users/' + user.uid);\r\n  \r\n        localStorage.setItem(\"userUID\", user.uid);\r\n        localStorage.setItem(\"userName\", user.displayName);\r\n        localStorage.setItem(\"userEmail\", user.email);\r\n  \r\n        // Check if user already exists\r\n        get(userRef).then((snapshot) => {\r\n          if (snapshot.exists()) {\r\n            alert(\"User already exists. Redirecting you to Sign In...\");\r\n            navigate(\"/SignIn\"); // Adjust this route to match your sign-in page\r\n            return;\r\n          }\r\n         \r\n            const role = document.querySelector('input[name=\"role\"]:checked')?.value;\r\n            if (!role) {\r\n              alert(\"Please select a role before signing up.\");\r\n              return;\r\n            }\r\n  \r\n            // Save new user only if they don't already exist\r\n            set(userRef, {\r\n              role: role\r\n            });\r\n  \r\n            goToPage(role);\r\n          \r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Google sign-in error:\", error);\r\n        alert(\"404 error signing in!\");\r\n      });\r\n  };\r\n  \r\n\r\n  const handleMicrosoftSignIn = async () => {\r\n    try {\r\n      const result = await signInWithPopup(microsoftAuth, microsoftProvider);\r\n      const user = result.user;\r\n      const userRef = ref(microsoft_db, 'users/' + user.uid);\r\n  \r\n      localStorage.setItem(\"userUID\", user.uid);\r\n      localStorage.setItem(\"userName\", user.displayName);\r\n      localStorage.setItem(\"userEmail\", user.email);\r\n  \r\n      // Check if user already exists\r\n      const snapshot = await get(userRef);\r\n      if (snapshot.exists()) {\r\n        alert(\"User already exists. Redirecting you to Sign In...\");\r\n        navigate(\"/SignIn\"); // Adjust this route to match your sign-in page\r\n        return;\r\n      }\r\n  \r\n     \r\n        const role = document.querySelector('input[name=\"role\"]:checked')?.value;\r\n        if (!role) {\r\n          alert(\"Please select a role before signing up.\");\r\n          return;\r\n        }\r\n  \r\n        // Save new user only if they don't already exist\r\n        await set(userRef, {\r\n          role: role\r\n        });\r\n  \r\n        goToPage(role);\r\n      \r\n  \r\n    } catch (error) {\r\n      console.error(\"Microsoft sign-in error:\", error);\r\n      alert(\"Sign-in failed. Please try again.\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <>\r\n      <section className=\"hero_sect\">\r\n      <h1 className=\"hustlr-header\">Hustlr.</h1>\r\n\r\n        \r\n      </section>\r\n\r\n      <main className=\"signup-container\">\r\n        <article className=\"signup-card\">\r\n        <header className=\"signup-header\">\r\n            <h1>Sign up to Hustlr</h1>\r\n            \r\n          </header>\r\n          <p> <b>Pick a role</b></p>\r\n          \r\n          <section className=\"signup-form\">\r\n            {/*<label className=\"form-control\" htmlFor=\"Admin\">\r\n              <input type=\"radio\" id=\"Admin\" name=\"role\" value=\"Admin\" />\r\n              Admin\r\n            </label>*/}\r\n            <label className=\"form-control\" htmlFor=\"Client\">\r\n              <input type=\"radio\" id=\"Client\" name=\"role\" value=\"Client\" />\r\n              Client\r\n            </label>\r\n            <label className=\"form-control\" htmlFor=\"Freelancer\">\r\n              <input\r\n                type=\"radio\"\r\n                id=\"Freelancer\"\r\n                name=\"role\"\r\n                value=\"Freelancer\"\r\n              />\r\n              Freelancer\r\n            </label>\r\n          </section>\r\n\r\n          <section className=\"signup-form\">\r\n            <button\r\n              id=\"googlebtn\"\r\n              type=\"button\"\r\n              className=\"googlebtn\"\r\n              onClick={handleGoogleSignInClick}\r\n            >\r\n              <img src = {google_icon} alt=\"g_logo\" />\r\n              Sign in with Google\r\n            </button>\r\n          </section>\r\n\r\n          <section className=\"ms_sign msbutton_sect\">\r\n            <button\r\n              id=\"ms-signin-btn\"\r\n              className=\"msbutton\"\r\n              onClick={handleMicrosoftSignIn}\r\n            >\r\n              <img src = {micro_icon} alt=\"micro_logo\" />\r\n              Sign in with Microsoft\r\n            </button>\r\n          </section>\r\n          <p>\r\n              Already a user ? {\" \"}\r\n              <a href=\"/SignIn\" rel=\"noopener noreferrer\">\r\n                Sign In \r\n              </a>\r\n            </p>\r\n          <footer className=\"signup-footer\">\r\n            <p>\r\n              By clicking sign up, you agree to our{\" \"}\r\n              <a href=\"terms.html\" rel=\"noopener noreferrer\">\r\n                Terms of Service\r\n              </a>\r\n            </p>\r\n          </footer>\r\n        </article>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mogor\\\\Desktop\\\\project\\\\hustlr\\\\src\\\\pages\\\\ClientPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/ClientPayments.css';\nimport { ref, get, update, onValue } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [message, setMessage] = useState('');\n  const fetchAcceptedJobs = async () => {\n    const userUID = localStorage.getItem(\"userUID\");\n    const acceptedRef = ref(applications_db, 'accepted_applications');\n    try {\n      const snapshot = await get(acceptedRef);\n      const jobList = [];\n      if (snapshot.exists()) {\n        snapshot.forEach(parentSnap => {\n          parentSnap.forEach(jobSnap => {\n            const data = jobSnap.val();\n            if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\n              data.job_milestones.forEach((milestone, index) => {\n                jobList.push({\n                  id: jobSnap.key + \"_ms_\" + index,\n                  jobTitle: data.jobTitle,\n                  client: data.clientName || 'Unknown',\n                  milestone: milestone.description,\n                  amount: milestone.amount,\n                  status: milestone.status || 'Pending',\n                  dueDate: milestone.dueDate || 'N/A'\n                });\n              });\n            }\n          });\n        });\n        setPayments(jobList);\n      } else {\n        console.log(\"No accepted jobs found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching accepted jobs:\", error);\n    }\n  };\n  const handlePaymentStatusChange = async (paymentId, status) => {\n    const [jobKey, milestoneIndex] = paymentId.split('_ms_');\n    const jobRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\n    try {\n      await update(jobRef, {\n        status: status\n      });\n      const updatedPayments = payments.map(payment => payment.id === paymentId ? {\n        ...payment,\n        status: status\n      } : payment);\n      setPayments(updatedPayments);\n    } catch (error) {\n      console.error(\"Error updating payment status:\", error);\n    }\n  };\n  const handleDeposit = () => {\n    const input = prompt(\"Enter amount to deposit:\");\n    const amount = parseFloat(input);\n    if (!isNaN(amount) && amount > 0) {\n      const newBalance = wallet + amount;\n      setWallet(newBalance);\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\n      setMessage(\"Deposit successful\");\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      alert(\"Invalid amount entered.\");\n    }\n  };\n  useEffect(() => {\n    fetchAcceptedJobs();\n  }, []);\n  useEffect(() => {\n    const userUID = localStorage.getItem(\"userUID\");\n    const acceptedRef = ref(applications_db, 'accepted_applications');\n    const unsubscribe = onValue(acceptedRef, snapshot => {\n      const jobList = [];\n      snapshot.forEach(parentSnap => {\n        parentSnap.forEach(jobSnap => {\n          const data = jobSnap.val();\n          if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\n            data.job_milestones.forEach((milestone, index) => {\n              jobList.push({\n                id: jobSnap.key + \"_ms_\" + index,\n                jobTitle: data.jobTitle,\n                client: data.clientName || 'Unknown',\n                milestone: milestone.description,\n                amount: milestone.amount,\n                status: milestone.status || 'Pending',\n                dueDate: milestone.dueDate || 'N/A'\n              });\n            });\n          }\n        });\n      });\n      setPayments(jobList);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"clientWallet\");\n    if (savedWallet) {\n      setWallet(parseFloat(savedWallet));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"client-payments-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Jobs for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/client\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"payments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payments for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeposit,\n          className: \"deposit-button\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Client Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", wallet.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by freelancer or job title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"payments-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: payments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No payments available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this) : payments.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.client\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.milestone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", job.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status ${job.status.toLowerCase()}`,\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.dueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mark-paid-btn\",\n                onClick: () => handlePaymentStatusChange(job.id, 'Done'),\n                children: \"Mark as Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientPayments, \"cygT0yH1ZXSDETxwRnPZ7S8Glr8=\");\n_c = ClientPayments;\nexport default ClientPayments;\nvar _c;\n$RefreshReg$(_c, \"ClientPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","onValue","applications_db","jsxDEV","_jsxDEV","ClientPayments","_s","payments","setPayments","wallet","setWallet","message","setMessage","fetchAcceptedJobs","userUID","localStorage","getItem","acceptedRef","snapshot","jobList","exists","forEach","parentSnap","jobSnap","data","val","applicant_userUID","Array","isArray","job_milestones","milestone","index","push","id","key","jobTitle","client","clientName","description","amount","status","dueDate","console","log","error","handlePaymentStatusChange","paymentId","jobKey","milestoneIndex","split","jobRef","updatedPayments","map","payment","handleDeposit","input","prompt","parseFloat","isNaN","newBalance","setItem","toString","setTimeout","alert","unsubscribe","savedWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","style","display","alignItems","justifyContent","onClick","toFixed","type","placeholder","length","colSpan","job","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/mogor/Desktop/project/hustlr/src/pages/ClientPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/ClientPayments.css';\r\nimport { ref, get, update, onValue } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\n\r\nconst ClientPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const fetchAcceptedJobs = async () => {\r\n    const userUID = localStorage.getItem(\"userUID\");\r\n    const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n    try {\r\n      const snapshot = await get(acceptedRef);\r\n      const jobList = [];\r\n\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(parentSnap => {\r\n          parentSnap.forEach(jobSnap => {\r\n            const data = jobSnap.val();\r\n            if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\r\n              data.job_milestones.forEach((milestone, index) => {\r\n                jobList.push({\r\n                  id: jobSnap.key + \"_ms_\" + index,\r\n                  jobTitle: data.jobTitle,\r\n                  client: data.clientName || 'Unknown',\r\n                  milestone: milestone.description,\r\n                  amount: milestone.amount,\r\n                  status: milestone.status || 'Pending',\r\n                  dueDate: milestone.dueDate || 'N/A'\r\n                });\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        setPayments(jobList);\r\n      } else {\r\n        console.log(\"No accepted jobs found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching accepted jobs:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePaymentStatusChange = async (paymentId, status) => {\r\n    const [jobKey, milestoneIndex] = paymentId.split('_ms_');\r\n    const jobRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\r\n\r\n    try {\r\n      await update(jobRef, { status: status });\r\n\r\n      const updatedPayments = payments.map(payment =>\r\n        payment.id === paymentId ? { ...payment, status: status } : payment\r\n      );\r\n\r\n      setPayments(updatedPayments);\r\n    } catch (error) {\r\n      console.error(\"Error updating payment status:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeposit = () => {\r\n    const input = prompt(\"Enter amount to deposit:\");\r\n    const amount = parseFloat(input);\r\n\r\n    if (!isNaN(amount) && amount > 0) {\r\n      const newBalance = wallet + amount;\r\n      setWallet(newBalance);\r\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\r\n      setMessage(\"Deposit successful\");\r\n      setTimeout(() => setMessage(''), 3000);\r\n    } else {\r\n      alert(\"Invalid amount entered.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAcceptedJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userUID = localStorage.getItem(\"userUID\");\r\n    const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n    const unsubscribe = onValue(acceptedRef, (snapshot) => {\r\n      const jobList = [];\r\n\r\n      snapshot.forEach(parentSnap => {\r\n        parentSnap.forEach(jobSnap => {\r\n          const data = jobSnap.val();\r\n          if (data.applicant_userUID === userUID && Array.isArray(data.job_milestones)) {\r\n            data.job_milestones.forEach((milestone, index) => {\r\n              jobList.push({\r\n                id: jobSnap.key + \"_ms_\" + index,\r\n                jobTitle: data.jobTitle,\r\n                client: data.clientName || 'Unknown',\r\n                milestone: milestone.description,\r\n                amount: milestone.amount,\r\n                status: milestone.status || 'Pending',\r\n                dueDate: milestone.dueDate || 'N/A'\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      setPayments(jobList);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"clientWallet\");\r\n    if (savedWallet) {\r\n      setWallet(parseFloat(savedWallet));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"client-payments-main\">\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Jobs for Clients</h1>\r\n        </section>\r\n\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/client\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <section className=\"payments-section\">\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <h2>Payments for Clients</h2>\r\n          <button onClick={handleDeposit} className=\"deposit-button\">Deposit</button>\r\n        </div>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n\r\n        {/* Client Wallet */}\r\n        <section className=\"wallet-section\">\r\n          <h3>Client Wallet</h3>\r\n          <p>Balance: ${wallet.toFixed(2)}</p>\r\n        </section>\r\n\r\n        {/* Filters */}\r\n        <section className=\"filters\">\r\n          <input type=\"text\" placeholder=\"Search by freelancer or job title\" />\r\n          <select>\r\n            <option>All</option>\r\n            <option>Paid</option>\r\n            <option>Pending</option>\r\n            <option>Overdue</option>\r\n          </select>\r\n          <input type=\"date\" />\r\n          <input type=\"date\" />\r\n          <button>Export CSV</button>\r\n        </section>\r\n\r\n        {/* Payments Table */}\r\n        <table className=\"payments-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Job Title</th>\r\n              <th>Freelancer</th>\r\n              <th>Milestone</th>\r\n              <th>Amount</th>\r\n              <th>Status</th>\r\n              <th>Due Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {payments.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"7\">No payments available.</td>\r\n              </tr>\r\n            ) : (\r\n              payments.map((job) => (\r\n                <tr key={job.id}>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.client}</td>\r\n                  <td>{job.milestone}</td>\r\n                  <td>${job.amount}</td>\r\n                  <td>\r\n                    <span className={`status ${job.status.toLowerCase()}`}>\r\n                      {job.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>{job.dueDate}</td>\r\n                  <td>\r\n                    <button className=\"mark-paid-btn\" onClick={() => handlePaymentStatusChange(job.id, 'Done')}>\r\n                      Mark as Paid\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mogor\\\\Desktop\\\\project\\\\hustlr\\\\src\\\\pages\\\\ClientPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/ClientPayments.css';\nimport { ref, get, update, onValue } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [message, setMessage] = useState('');\n  const fetchAcceptedJobs = async () => {\n    const userUID = localStorage.getItem(\"userUID\");\n    const acceptedRef = ref(applications_db, 'accepted_applications');\n    try {\n      const snapshot = await get(acceptedRef);\n      const jobList = [];\n      if (snapshot.exists()) {\n        snapshot.forEach(parentSnap => {\n          parentSnap.forEach(jobSnap => {\n            const data = jobSnap.val();\n            if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\n              data.job_milestones.forEach((milestone, index) => {\n                jobList.push({\n                  id: jobSnap.key + \"_ms_\" + index,\n                  jobKey: jobSnap.key,\n                  milestoneIndex: index,\n                  jobTitle: data.jobTitle,\n                  freelancerUID: data.applicant_userUID,\n                  freelancerName: data.freelancerName || 'Freelancer',\n                  milestone: milestone.description,\n                  amount: milestone.amount,\n                  status: milestone.status || 'Pending',\n                  dueDate: milestone.dueDate || 'N/A'\n                });\n              });\n            }\n          });\n        });\n        setPayments(jobList);\n      } else {\n        console.log(\"No accepted jobs found.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching accepted jobs:\", error);\n    }\n  };\n  const handlePaymentStatusChange = async paymentId => {\n    const [jobKey, milestoneIndex] = paymentId.split('_ms_');\n    const payment = payments.find(p => p.id === paymentId);\n    if (!payment) return;\n    if (payment.status !== 'Done') {\n      alert(\"Milestone must be marked as Done by the freelancer before payment.\");\n      return;\n    }\n    if (wallet < payment.amount) {\n      alert(\"Insufficient wallet balance.\");\n      return;\n    }\n    const jobRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\n    const clientViewRef = ref(applications_db, `client_view/${jobKey}/job_milestones/${milestoneIndex}`);\n    const freelancerWalletRef = ref(applications_db, `wallets/${payment.freelancerUID}`);\n    const clientUID = localStorage.getItem(\"userUID\");\n    const clientWalletRef = ref(applications_db, `wallets/${clientUID}`);\n    try {\n      // Update milestone status to \"Paid\"\n      await update(jobRef, {\n        status: \"Paid\"\n      });\n      await update(clientViewRef, {\n        status: \"Paid\"\n      });\n\n      // Fetch freelancer's wallet balance\n      const freelancerSnapshot = await get(freelancerWalletRef);\n      const freelancerBalance = freelancerSnapshot.exists() ? freelancerSnapshot.val() : 0;\n\n      // Update freelancer's wallet\n      await update(freelancerWalletRef, freelancerBalance + payment.amount);\n\n      // Update client's wallet\n      const newClientWallet = wallet - payment.amount;\n      await update(clientWalletRef, newClientWallet);\n      localStorage.setItem(\"clientWallet\", newClientWallet.toString());\n      setWallet(newClientWallet);\n\n      // Update UI\n      const updatedPayments = payments.map(p => p.id === paymentId ? {\n        ...p,\n        status: 'Paid'\n      } : p);\n      setPayments(updatedPayments);\n      setMessage(\"Payment successful.\");\n      setTimeout(() => setMessage(''), 3000);\n    } catch (error) {\n      console.error(\"Error processing payment:\", error);\n    }\n  };\n  const handleDeposit = () => {\n    const input = prompt(\"Enter amount to deposit:\");\n    const amount = parseFloat(input);\n    if (!isNaN(amount) && amount > 0) {\n      const newBalance = wallet + amount;\n      setWallet(newBalance);\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\n      const userUID = localStorage.getItem(\"userUID\");\n      const clientWalletRef = ref(applications_db, `wallets/${userUID}`);\n      update(clientWalletRef, newBalance);\n      setMessage(\"Deposit successful\");\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      alert(\"Invalid amount entered.\");\n    }\n  };\n  useEffect(() => {\n    fetchAcceptedJobs();\n  }, []);\n  useEffect(() => {\n    const userUID = localStorage.getItem(\"userUID\");\n    const acceptedRef = ref(applications_db, 'accepted_applications');\n    const unsubscribe = onValue(acceptedRef, snapshot => {\n      const jobList = [];\n      snapshot.forEach(parentSnap => {\n        parentSnap.forEach(jobSnap => {\n          const data = jobSnap.val();\n          if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\n            data.job_milestones.forEach((milestone, index) => {\n              jobList.push({\n                id: jobSnap.key + \"_ms_\" + index,\n                jobKey: jobSnap.key,\n                milestoneIndex: index,\n                jobTitle: data.jobTitle,\n                freelancerUID: data.applicant_userUID,\n                freelancerName: data.freelancerName || 'Freelancer',\n                milestone: milestone.description,\n                amount: milestone.amount,\n                status: milestone.status || 'Pending',\n                dueDate: milestone.dueDate || 'N/A'\n              });\n            });\n          }\n        });\n      });\n      setPayments(jobList);\n    });\n    return () => unsubscribe();\n  }, []);\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"clientWallet\");\n    if (savedWallet) {\n      setWallet(parseFloat(savedWallet));\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"client-payments-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"client-jobs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"header-title-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Jobs for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"nav_section\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"main-nav\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/client\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"payments-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payments for Clients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDeposit,\n          className: \"deposit-button\",\n          children: \"Deposit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success-message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Client Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Balance: $\", wallet.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by freelancer or job title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Paid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Overdue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Export CSV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"payments-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Freelancer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Milestone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: payments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"7\",\n              children: \"No payments available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this) : payments.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.jobTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.freelancerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.milestone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"$\", job.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status ${job.status.toLowerCase()}`,\n                children: job.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.dueDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: job.status === 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"mark-paid-btn\",\n                onClick: () => handlePaymentStatusChange(job.id),\n                children: \"Mark as Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, job.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientPayments, \"cygT0yH1ZXSDETxwRnPZ7S8Glr8=\");\n_c = ClientPayments;\nexport default ClientPayments;\nvar _c;\n$RefreshReg$(_c, \"ClientPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","onValue","applications_db","jsxDEV","_jsxDEV","ClientPayments","_s","payments","setPayments","wallet","setWallet","message","setMessage","fetchAcceptedJobs","userUID","localStorage","getItem","acceptedRef","snapshot","jobList","exists","forEach","parentSnap","jobSnap","data","val","clientUID","Array","isArray","job_milestones","milestone","index","push","id","key","jobKey","milestoneIndex","jobTitle","freelancerUID","applicant_userUID","freelancerName","description","amount","status","dueDate","console","log","error","handlePaymentStatusChange","paymentId","split","payment","find","p","alert","jobRef","clientViewRef","freelancerWalletRef","clientWalletRef","freelancerSnapshot","freelancerBalance","newClientWallet","setItem","toString","updatedPayments","map","setTimeout","handleDeposit","input","prompt","parseFloat","isNaN","newBalance","unsubscribe","savedWallet","className","children","fileName","_jsxFileName","lineNumber","columnNumber","href","style","display","alignItems","justifyContent","onClick","toFixed","type","placeholder","length","colSpan","job","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/mogor/Desktop/project/hustlr/src/pages/ClientPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/ClientPayments.css';\r\nimport { ref, get, update, onValue } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\n\r\nconst ClientPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const fetchAcceptedJobs = async () => {\r\n    const userUID = localStorage.getItem(\"userUID\");\r\n    const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n    try {\r\n      const snapshot = await get(acceptedRef);\r\n      const jobList = [];\r\n\r\n      if (snapshot.exists()) {\r\n        snapshot.forEach(parentSnap => {\r\n          parentSnap.forEach(jobSnap => {\r\n            const data = jobSnap.val();\r\n            if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\r\n              data.job_milestones.forEach((milestone, index) => {\r\n                jobList.push({\r\n                  id: jobSnap.key + \"_ms_\" + index,\r\n                  jobKey: jobSnap.key,\r\n                  milestoneIndex: index,\r\n                  jobTitle: data.jobTitle,\r\n                  freelancerUID: data.applicant_userUID,\r\n                  freelancerName: data.freelancerName || 'Freelancer',\r\n                  milestone: milestone.description,\r\n                  amount: milestone.amount,\r\n                  status: milestone.status || 'Pending',\r\n                  dueDate: milestone.dueDate || 'N/A'\r\n                });\r\n              });\r\n            }\r\n          });\r\n        });\r\n\r\n        setPayments(jobList);\r\n      } else {\r\n        console.log(\"No accepted jobs found.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching accepted jobs:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePaymentStatusChange = async (paymentId) => {\r\n    const [jobKey, milestoneIndex] = paymentId.split('_ms_');\r\n    const payment = payments.find(p => p.id === paymentId);\r\n    if (!payment) return;\r\n\r\n    if (payment.status !== 'Done') {\r\n      alert(\"Milestone must be marked as Done by the freelancer before payment.\");\r\n      return;\r\n    }\r\n\r\n    if (wallet < payment.amount) {\r\n      alert(\"Insufficient wallet balance.\");\r\n      return;\r\n    }\r\n\r\n    const jobRef = ref(applications_db, `accepted_applications/${jobKey}/job_milestones/${milestoneIndex}`);\r\n    const clientViewRef = ref(applications_db, `client_view/${jobKey}/job_milestones/${milestoneIndex}`);\r\n    const freelancerWalletRef = ref(applications_db, `wallets/${payment.freelancerUID}`);\r\n    const clientUID = localStorage.getItem(\"userUID\");\r\n    const clientWalletRef = ref(applications_db, `wallets/${clientUID}`);\r\n\r\n    try {\r\n      // Update milestone status to \"Paid\"\r\n      await update(jobRef, { status: \"Paid\" });\r\n      await update(clientViewRef, { status: \"Paid\" });\r\n\r\n      // Fetch freelancer's wallet balance\r\n      const freelancerSnapshot = await get(freelancerWalletRef);\r\n      const freelancerBalance = freelancerSnapshot.exists() ? freelancerSnapshot.val() : 0;\r\n\r\n      // Update freelancer's wallet\r\n      await update(freelancerWalletRef, freelancerBalance + payment.amount);\r\n\r\n      // Update client's wallet\r\n      const newClientWallet = wallet - payment.amount;\r\n      await update(clientWalletRef, newClientWallet);\r\n      localStorage.setItem(\"clientWallet\", newClientWallet.toString());\r\n      setWallet(newClientWallet);\r\n\r\n      // Update UI\r\n      const updatedPayments = payments.map(p =>\r\n        p.id === paymentId ? { ...p, status: 'Paid' } : p\r\n      );\r\n      setPayments(updatedPayments);\r\n\r\n      setMessage(\"Payment successful.\");\r\n      setTimeout(() => setMessage(''), 3000);\r\n    } catch (error) {\r\n      console.error(\"Error processing payment:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeposit = () => {\r\n    const input = prompt(\"Enter amount to deposit:\");\r\n    const amount = parseFloat(input);\r\n\r\n    if (!isNaN(amount) && amount > 0) {\r\n      const newBalance = wallet + amount;\r\n      setWallet(newBalance);\r\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\r\n\r\n      const userUID = localStorage.getItem(\"userUID\");\r\n      const clientWalletRef = ref(applications_db, `wallets/${userUID}`);\r\n      update(clientWalletRef, newBalance);\r\n\r\n      setMessage(\"Deposit successful\");\r\n      setTimeout(() => setMessage(''), 3000);\r\n    } else {\r\n      alert(\"Invalid amount entered.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAcceptedJobs();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userUID = localStorage.getItem(\"userUID\");\r\n    const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n    const unsubscribe = onValue(acceptedRef, (snapshot) => {\r\n      const jobList = [];\r\n\r\n      snapshot.forEach(parentSnap => {\r\n        parentSnap.forEach(jobSnap => {\r\n          const data = jobSnap.val();\r\n          if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\r\n            data.job_milestones.forEach((milestone, index) => {\r\n              jobList.push({\r\n                id: jobSnap.key + \"_ms_\" + index,\r\n                jobKey: jobSnap.key,\r\n                milestoneIndex: index,\r\n                jobTitle: data.jobTitle,\r\n                freelancerUID: data.applicant_userUID,\r\n                freelancerName: data.freelancerName || 'Freelancer',\r\n                milestone: milestone.description,\r\n                amount: milestone.amount,\r\n                status: milestone.status || 'Pending',\r\n                dueDate: milestone.dueDate || 'N/A'\r\n              });\r\n            });\r\n          }\r\n        });\r\n      });\r\n\r\n      setPayments(jobList);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"clientWallet\");\r\n    if (savedWallet) {\r\n      setWallet(parseFloat(savedWallet));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"client-payments-main\">\r\n      <header className=\"client-jobs-header\">\r\n        <section className=\"header-title-area\">\r\n          <h1 className=\"main-title\">Jobs for Clients</h1>\r\n        </section>\r\n\r\n        <section className=\"nav_section\">\r\n          <nav className=\"main-nav\">\r\n            <ul>\r\n              <li><a href=\"/client\">Home</a></li>\r\n            </ul>\r\n          </nav>\r\n        </section>\r\n      </header>\r\n\r\n      <section className=\"payments-section\">\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n          <h2>Payments for Clients</h2>\r\n          <button onClick={handleDeposit} className=\"deposit-button\">Deposit</button>\r\n        </div>\r\n\r\n        {message && <p className=\"success-message\">{message}</p>}\r\n\r\n        <section className=\"wallet-section\">\r\n          <h3>Client Wallet</h3>\r\n          <p>Balance: ${wallet.toFixed(2)}</p>\r\n        </section>\r\n\r\n        <section className=\"filters\">\r\n          <input type=\"text\" placeholder=\"Search by freelancer or job title\" />\r\n          <select>\r\n            <option>All</option>\r\n            <option>Paid</option>\r\n            <option>Pending</option>\r\n            <option>Overdue</option>\r\n          </select>\r\n          <input type=\"date\" />\r\n          <input type=\"date\" />\r\n          <button>Export CSV</button>\r\n        </section>\r\n\r\n        <table className=\"payments-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Job Title</th>\r\n              <th>Freelancer</th>\r\n              <th>Milestone</th>\r\n              <th>Amount</th>\r\n              <th>Status</th>\r\n              <th>Due Date</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {payments.length === 0 ? (\r\n              <tr>\r\n                <td colSpan=\"7\">No payments available.</td>\r\n              </tr>\r\n            ) : (\r\n              payments.map((job) => (\r\n                <tr key={job.id}>\r\n                  <td>{job.jobTitle}</td>\r\n                  <td>{job.freelancerName}</td>\r\n                  <td>{job.milestone}</td>\r\n                  <td>${job.amount}</td>\r\n                  <td>\r\n                    <span className={`status ${job.status.toLowerCase()}`}>\r\n                      {job.status}\r\n                    </span>\r\n                  </td>\r\n                  <td>{job.dueDate}</td>\r\n                  <td>\r\n                    {job.status === 'Done' && (\r\n                      <button className=\"mark-paid-btn\" onClick={() => handlePaymentStatusChange(job.id)}>\r\n                        Mark as Paid\r\n                      </button>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              ))\r\n            )}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
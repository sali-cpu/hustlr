{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2729931\\\\Desktop\\\\PULL\\\\hustlr\\\\src\\\\pages\\\\ClientPayments.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../stylesheets/ClientPayments.css';\nimport { ref, get, update } from \"firebase/database\";\nimport { applications_db } from '../firebaseConfig';\nimport HeaderClient from '../components/HeaderClient';\nimport FooterClient from '../components/FooterClient';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClientPayments = () => {\n  _s();\n  const [payments, setPayments] = useState([]);\n  const [wallet, setWallet] = useState(0);\n  const [message, setMessage] = useState('');\n  // Filter states\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState('All');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  useEffect(() => {\n    const savedWallet = localStorage.getItem(\"clientWallet\");\n    if (savedWallet) setWallet(parseFloat(savedWallet));\n    const fetchJobs = async () => {\n      const userUID = localStorage.getItem(\"userUID\");\n      const acceptedRef = ref(applications_db, 'accepted_applications');\n      try {\n        const snapshot = await get(acceptedRef);\n        const jobList = [];\n        const freelancerDone = JSON.parse(localStorage.getItem(\"freelancerDoneMilestones\") || \"{}\");\n        const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\n        if (snapshot.exists()) {\n          snapshot.forEach(parentSnap => {\n            parentSnap.forEach(jobSnap => {\n              const data = jobSnap.val();\n              if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\n                data.job_milestones.forEach((milestone, index) => {\n                  const id = jobSnap.key + \"_ms_\" + index;\n                  let status = milestone.status || 'Pending';\n                  if (freelancerDone[id]) status = 'Done';\n                  if (paidMilestones[id]) status = 'Paid';\n                  jobList.push({\n                    id,\n                    jobSnapKey: parentSnap.key + '/' + jobSnap.key,\n                    index,\n                    jobTitle: data.jobTitle,\n                    milestone: milestone.description,\n                    amount: milestone.amount,\n                    status: status,\n                    dueDate: milestone.duedate || 'N/A'\n                  });\n                });\n              }\n            });\n          });\n          setPayments(jobList);\n        }\n      } catch (error) {\n        console.error(\"Error fetching jobs:\", error);\n      }\n    };\n    fetchJobs();\n  }, []);\n  const handleDeposit = () => {\n    const input = prompt(\"Enter amount to deposit:\");\n    const amount = parseFloat(input);\n    if (!isNaN(amount) && amount > 0) {\n      const newBalance = wallet + amount;\n      setWallet(newBalance);\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\n      setMessage(\"Deposit successful\");\n      setTimeout(() => setMessage(''), 3000);\n    } else {\n      alert(\"Invalid amount entered.\");\n    }\n  };\n  const handlePay = async payment => {\n    if (wallet < payment.amount) {\n      alert(\"Insufficient funds.\");\n      return;\n    }\n    try {\n      const newWallet = wallet - parseFloat(payment.amount);\n      const freelancerWallet = parseFloat(localStorage.getItem(\"freelancerWallet\") || \"0\");\n      const updatedFreelancerWallet = freelancerWallet + parseFloat(payment.amount);\n\n      // Update milestone status in database\n      const milestoneRef = ref(applications_db, `accepted_applications/${payment.jobSnapKey}/job_milestones/${payment.index}`);\n      await update(milestoneRef, {\n        status: \"Paid\"\n      });\n\n      // Update local storage\n      const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\n      paidMilestones[payment.id] = true;\n      localStorage.setItem(\"paidMilestones\", JSON.stringify(paidMilestones));\n      localStorage.setItem(\"clientWallet\", newWallet.toString());\n      localStorage.setItem(\"freelancerWallet\", updatedFreelancerWallet.toString());\n      setWallet(newWallet);\n      setPayments(prev => prev.map(p => p.id === payment.id ? {\n        ...p,\n        status: 'Paid'\n      } : p));\n    } catch (err) {\n      console.error(\"Error updating milestone as Paid:\", err);\n    }\n  };\n\n  // Filter payments based on filters\n  const filteredPayments = payments.filter(payment => {\n    const matchesSearch = payment.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) || payment.freelancer.toLowerCase().includes(searchTerm.toLowerCase());\n    const matchesStatus = statusFilter === 'All' || payment.status === statusFilter;\n    const matchesDateRange = (!startDate || payment.dueDate >= startDate) && (!endDate || payment.dueDate <= endDate);\n    return matchesSearch && matchesStatus && matchesDateRange;\n  });\n\n  // Export to CSV function\n  const exportToCSV = () => {\n    const headers = ['Job Title', 'Milestone', 'Amount', 'Status', 'Due Date'];\n    const csvRows = [];\n\n    // Add headers\n    csvRows.push(headers.join(','));\n\n    // Add data rows\n    filteredPayments.forEach(payment => {\n      const values = [`\"${payment.jobTitle}\"`, `\"${payment.milestone}\"`, payment.amount, payment.status, payment.dueDate];\n      csvRows.push(values.join(','));\n    });\n\n    // Create and download CSV file\n    const csvContent = csvRows.join('\\n');\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8;'\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.setAttribute('href', url);\n    link.setAttribute('download', `Client_payments_${new Date().toISOString().slice(0, 10)}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"client-payments-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"client-jobs-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"header-title-area\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"main-title\",\n            children: \"Jobs for Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"nav_section\",\n          children: /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"main-nav\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"/client\",\n                  children: \"Home\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"payments-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Payments for Clients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDeposit,\n            className: \"deposit-button\",\n            children: \"Deposit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"success-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"wallet-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Client Wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Balance: $\", wallet.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search by job title\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: statusFilter,\n            onChange: e => setStatusFilter(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Paid\",\n              children: \"Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Pending\",\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Done\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            placeholder: \"Start date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            placeholder: \"End date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToCSV,\n            children: \"Export CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"payments-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Milestone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Due Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredPayments.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"7\",\n                children: \"No payments available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this) : filteredPayments.map(job => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.jobTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.milestone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"$\", job.amount]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `status ${job.status.toLowerCase()}`,\n                  children: job.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.dueDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: job.status === 'Done' && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"mark-paid-btn\",\n                  onClick: () => handlePay(job),\n                  children: \"Pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)]\n            }, job.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FooterClient, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ClientPayments, \"Ic8RO40AEJ4CvYz9gMWVtTYfvSA=\");\n_c = ClientPayments;\nexport default ClientPayments;\nvar _c;\n$RefreshReg$(_c, \"ClientPayments\");","map":{"version":3,"names":["React","useEffect","useState","ref","get","update","applications_db","HeaderClient","FooterClient","jsxDEV","_jsxDEV","Fragment","_Fragment","ClientPayments","_s","payments","setPayments","wallet","setWallet","message","setMessage","searchTerm","setSearchTerm","statusFilter","setStatusFilter","startDate","setStartDate","endDate","setEndDate","savedWallet","localStorage","getItem","parseFloat","fetchJobs","userUID","acceptedRef","snapshot","jobList","freelancerDone","JSON","parse","paidMilestones","exists","forEach","parentSnap","jobSnap","data","val","clientUID","Array","isArray","job_milestones","milestone","index","id","key","status","push","jobSnapKey","jobTitle","description","amount","dueDate","duedate","error","console","handleDeposit","input","prompt","isNaN","newBalance","setItem","toString","setTimeout","alert","handlePay","payment","newWallet","freelancerWallet","updatedFreelancerWallet","milestoneRef","stringify","prev","map","p","err","filteredPayments","filter","matchesSearch","toLowerCase","includes","freelancer","matchesStatus","matchesDateRange","exportToCSV","headers","csvRows","join","values","csvContent","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","Date","toISOString","slice","style","visibility","body","appendChild","click","removeChild","children","fileName","_jsxFileName","lineNumber","columnNumber","className","href","display","alignItems","justifyContent","onClick","toFixed","placeholder","value","onChange","e","target","length","colSpan","job","_c","$RefreshReg$"],"sources":["C:/Users/2729931/Desktop/PULL/hustlr/src/pages/ClientPayments.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../stylesheets/ClientPayments.css';\r\nimport { ref, get, update } from \"firebase/database\";\r\nimport { applications_db } from '../firebaseConfig';\r\nimport HeaderClient from '../components/HeaderClient';\r\nimport FooterClient from '../components/FooterClient';\r\n\r\nconst ClientPayments = () => {\r\n  const [payments, setPayments] = useState([]);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [message, setMessage] = useState('');\r\n  // Filter states\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [statusFilter, setStatusFilter] = useState('All');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    const savedWallet = localStorage.getItem(\"clientWallet\");\r\n    if (savedWallet) setWallet(parseFloat(savedWallet));\r\n\r\n    const fetchJobs = async () => {\r\n      const userUID = localStorage.getItem(\"userUID\");\r\n      const acceptedRef = ref(applications_db, 'accepted_applications');\r\n\r\n      try {\r\n        const snapshot = await get(acceptedRef);\r\n        const jobList = [];\r\n        const freelancerDone = JSON.parse(localStorage.getItem(\"freelancerDoneMilestones\") || \"{}\");\r\n        const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\r\n\r\n        if (snapshot.exists()) {\r\n          snapshot.forEach(parentSnap => {\r\n            parentSnap.forEach(jobSnap => {\r\n              const data = jobSnap.val();\r\n               if (data.clientUID === userUID && Array.isArray(data.job_milestones)) {\r\n                data.job_milestones.forEach((milestone, index) => {\r\n                  const id = jobSnap.key + \"_ms_\" + index;\r\n                  let status = milestone.status || 'Pending';\r\n                  if (freelancerDone[id]) status = 'Done';\r\n                  if (paidMilestones[id]) status = 'Paid';\r\n\r\n                  jobList.push({\r\n                    id,\r\n                    jobSnapKey: parentSnap.key + '/' + jobSnap.key,\r\n                    index,\r\n                    jobTitle: data.jobTitle,\r\n                    \r\n                    milestone: milestone.description,\r\n                    amount: milestone.amount,\r\n                    status: status,\r\n                    dueDate: milestone.duedate || 'N/A'\r\n                  });\r\n                });\r\n              }\r\n            });\r\n          });\r\n          setPayments(jobList);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching jobs:\", error);\r\n      }\r\n    };\r\n\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleDeposit = () => {\r\n    const input = prompt(\"Enter amount to deposit:\");\r\n    const amount = parseFloat(input);\r\n    if (!isNaN(amount) && amount > 0) {\r\n      const newBalance = wallet + amount;\r\n      setWallet(newBalance);\r\n      localStorage.setItem(\"clientWallet\", newBalance.toString());\r\n      setMessage(\"Deposit successful\");\r\n      setTimeout(() => setMessage(''), 3000);\r\n    } else {\r\n      alert(\"Invalid amount entered.\");\r\n    }\r\n  };\r\n\r\n  const handlePay = async (payment) => {\r\n    if (wallet < payment.amount) {\r\n      alert(\"Insufficient funds.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const newWallet = wallet - parseFloat(payment.amount);\r\n      const freelancerWallet = parseFloat(localStorage.getItem(\"freelancerWallet\") || \"0\");\r\n      const updatedFreelancerWallet = freelancerWallet + parseFloat(payment.amount);\r\n\r\n      // Update milestone status in database\r\n      const milestoneRef = ref(applications_db, `accepted_applications/${payment.jobSnapKey}/job_milestones/${payment.index}`);\r\n      await update(milestoneRef, { status: \"Paid\" });\r\n\r\n      // Update local storage\r\n      const paidMilestones = JSON.parse(localStorage.getItem(\"paidMilestones\") || \"{}\");\r\n      paidMilestones[payment.id] = true;\r\n      localStorage.setItem(\"paidMilestones\", JSON.stringify(paidMilestones));\r\n\r\n      localStorage.setItem(\"clientWallet\", newWallet.toString());\r\n      localStorage.setItem(\"freelancerWallet\", updatedFreelancerWallet.toString());\r\n\r\n      setWallet(newWallet);\r\n      setPayments(prev =>\r\n        prev.map(p => p.id === payment.id ? { ...p, status: 'Paid' } : p)\r\n      );\r\n    } catch (err) {\r\n      console.error(\"Error updating milestone as Paid:\", err);\r\n    }\r\n  };\r\n\r\n  // Filter payments based on filters\r\n  const filteredPayments = payments.filter(payment => {\r\n    const matchesSearch = payment.jobTitle.toLowerCase().includes(searchTerm.toLowerCase()) || \r\n                         payment.freelancer.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = statusFilter === 'All' || payment.status === statusFilter;\r\n    const matchesDateRange = (\r\n      (!startDate || payment.dueDate >= startDate) && \r\n      (!endDate || payment.dueDate <= endDate)\r\n    );\r\n    return matchesSearch && matchesStatus && matchesDateRange;\r\n  });\r\n\r\n  // Export to CSV function\r\n  const exportToCSV = () => {\r\n    const headers = ['Job Title', 'Milestone', 'Amount', 'Status', 'Due Date'];\r\n    const csvRows = [];\r\n    \r\n    // Add headers\r\n    csvRows.push(headers.join(','));\r\n    \r\n    // Add data rows\r\n    filteredPayments.forEach(payment => {\r\n      const values = [\r\n        `\"${payment.jobTitle}\"`,\r\n        `\"${payment.milestone}\"`,\r\n        payment.amount,\r\n        payment.status,\r\n        payment.dueDate,\r\n      ];\r\n      csvRows.push(values.join(','));\r\n    });\r\n\r\n    // Create and download CSV file\r\n    const csvContent = csvRows.join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', url);\r\n    link.setAttribute('download', `Client_payments_${new Date().toISOString().slice(0,10)}.csv`);\r\n    link.style.visibility = 'hidden';\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HeaderClient />\r\n      <main className=\"client-payments-main\">\r\n        <header className=\"client-jobs-header\">\r\n          <section className=\"header-title-area\">\r\n            <h1 className=\"main-title\">Jobs for Clients</h1>\r\n          </section>\r\n\r\n          <section className=\"nav_section\">\r\n            <nav className=\"main-nav\">\r\n              <ul>\r\n                <li><a href=\"/client\">Home</a></li>\r\n              </ul>\r\n            </nav>\r\n          </section>\r\n        </header>\r\n\r\n        <section className=\"payments-section\">\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n            <h2>Payments for Clients</h2>\r\n            <button onClick={handleDeposit} className=\"deposit-button\">Deposit</button>\r\n          </div>\r\n\r\n          {message && <p className=\"success-message\">{message}</p>}\r\n\r\n          <section className=\"wallet-section\">\r\n            <h3>Client Wallet</h3>\r\n            <p>Balance: ${wallet.toFixed(2)}</p>\r\n          </section>\r\n\r\n          <section className=\"filters\">\r\n            <input \r\n              type=\"text\" \r\n              placeholder=\"Search by job title\" \r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n            <select \r\n              value={statusFilter}\r\n              onChange={(e) => setStatusFilter(e.target.value)}\r\n            >\r\n              <option value=\"All\">All</option>\r\n              <option value=\"Paid\">Paid</option>\r\n              <option value=\"Pending\">Pending</option>\r\n              <option value=\"Done\">Done</option>\r\n            </select>\r\n            <input \r\n              type=\"date\" \r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              placeholder=\"Start date\"\r\n            />\r\n            <input \r\n              type=\"date\" \r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              placeholder=\"End date\"\r\n            />\r\n            <button onClick={exportToCSV}>Export CSV</button>\r\n          </section>\r\n\r\n          <table className=\"payments-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Job Title</th>\r\n                \r\n                <th>Milestone</th>\r\n                <th>Amount</th>\r\n                <th>Status</th>\r\n                <th>Due Date</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredPayments.length === 0 ? (\r\n                <tr><td colSpan=\"7\">No payments available.</td></tr>\r\n              ) : (\r\n                filteredPayments.map(job => (\r\n                  <tr key={job.id}>\r\n                    <td>{job.jobTitle}</td>\r\n                    \r\n                    <td>{job.milestone}</td>\r\n                    <td>${job.amount}</td>\r\n                    <td><span className={`status ${job.status.toLowerCase()}`}>{job.status}</span></td>\r\n                    <td>{job.dueDate}</td>\r\n                    <td>\r\n                      {job.status === 'Done' && (\r\n                        <button className=\"mark-paid-btn\" onClick={() => handlePay(job)}>\r\n                          Pay\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </section>\r\n      </main>\r\n      <FooterClient />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientPayments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}